/*
product/product.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package product

import (
	"encoding/json"
)

// ProductBulkUpdateResponse struct for ProductBulkUpdateResponse
type ProductBulkUpdateResponse struct {
	ProductResponse []ProductBulkUpdateResponseResponse `json:"productResponse,omitempty"`
}

// NewProductBulkUpdateResponse instantiates a new ProductBulkUpdateResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProductBulkUpdateResponse() *ProductBulkUpdateResponse {
	this := ProductBulkUpdateResponse{}
	return &this
}

// NewProductBulkUpdateResponseWithDefaults instantiates a new ProductBulkUpdateResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProductBulkUpdateResponseWithDefaults() *ProductBulkUpdateResponse {
	this := ProductBulkUpdateResponse{}
	return &this
}

// GetProductResponse returns the ProductResponse field value if set, zero value otherwise.
func (o *ProductBulkUpdateResponse) GetProductResponse() []ProductBulkUpdateResponseResponse {
	if o == nil || isNil(o.ProductResponse) {
		var ret []ProductBulkUpdateResponseResponse
		return ret
	}
	return o.ProductResponse
}

// GetProductResponseOk returns a tuple with the ProductResponse field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductBulkUpdateResponse) GetProductResponseOk() ([]ProductBulkUpdateResponseResponse, bool) {
	if o == nil || isNil(o.ProductResponse) {
    return nil, false
	}
	return o.ProductResponse, true
}

// HasProductResponse returns a boolean if a field has been set.
func (o *ProductBulkUpdateResponse) HasProductResponse() bool {
	if o != nil && !isNil(o.ProductResponse) {
		return true
	}

	return false
}

// SetProductResponse gets a reference to the given []ProductBulkUpdateResponseResponse and assigns it to the ProductResponse field.
func (o *ProductBulkUpdateResponse) SetProductResponse(v []ProductBulkUpdateResponseResponse) {
	o.ProductResponse = v
}

func (o ProductBulkUpdateResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.ProductResponse) {
		toSerialize["productResponse"] = o.ProductResponse
	}
	return json.Marshal(toSerialize)
}

type NullableProductBulkUpdateResponse struct {
	value *ProductBulkUpdateResponse
	isSet bool
}

func (v NullableProductBulkUpdateResponse) Get() *ProductBulkUpdateResponse {
	return v.value
}

func (v *NullableProductBulkUpdateResponse) Set(val *ProductBulkUpdateResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableProductBulkUpdateResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableProductBulkUpdateResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProductBulkUpdateResponse(val *ProductBulkUpdateResponse) *NullableProductBulkUpdateResponse {
	return &NullableProductBulkUpdateResponse{value: val, isSet: true}
}

func (v NullableProductBulkUpdateResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProductBulkUpdateResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


