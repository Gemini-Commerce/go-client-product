/*
Product Service

API for managing products

API version: v1
Contact: info@gemini-commerce.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package product

import (
	"encoding/json"
)

// checks if the ProductBulkUpdateResponseV2Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProductBulkUpdateResponseV2Response{}

// ProductBulkUpdateResponseV2Response struct for ProductBulkUpdateResponseV2Response
type ProductBulkUpdateResponseV2Response struct {
	ProductId *string `json:"productId,omitempty"`
	Attributes *map[string]ProtobufAny `json:"attributes,omitempty"`
}

// NewProductBulkUpdateResponseV2Response instantiates a new ProductBulkUpdateResponseV2Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProductBulkUpdateResponseV2Response() *ProductBulkUpdateResponseV2Response {
	this := ProductBulkUpdateResponseV2Response{}
	return &this
}

// NewProductBulkUpdateResponseV2ResponseWithDefaults instantiates a new ProductBulkUpdateResponseV2Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProductBulkUpdateResponseV2ResponseWithDefaults() *ProductBulkUpdateResponseV2Response {
	this := ProductBulkUpdateResponseV2Response{}
	return &this
}

// GetProductId returns the ProductId field value if set, zero value otherwise.
func (o *ProductBulkUpdateResponseV2Response) GetProductId() string {
	if o == nil || IsNil(o.ProductId) {
		var ret string
		return ret
	}
	return *o.ProductId
}

// GetProductIdOk returns a tuple with the ProductId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductBulkUpdateResponseV2Response) GetProductIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProductId) {
		return nil, false
	}
	return o.ProductId, true
}

// HasProductId returns a boolean if a field has been set.
func (o *ProductBulkUpdateResponseV2Response) HasProductId() bool {
	if o != nil && !IsNil(o.ProductId) {
		return true
	}

	return false
}

// SetProductId gets a reference to the given string and assigns it to the ProductId field.
func (o *ProductBulkUpdateResponseV2Response) SetProductId(v string) {
	o.ProductId = &v
}

// GetAttributes returns the Attributes field value if set, zero value otherwise.
func (o *ProductBulkUpdateResponseV2Response) GetAttributes() map[string]ProtobufAny {
	if o == nil || IsNil(o.Attributes) {
		var ret map[string]ProtobufAny
		return ret
	}
	return *o.Attributes
}

// GetAttributesOk returns a tuple with the Attributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductBulkUpdateResponseV2Response) GetAttributesOk() (*map[string]ProtobufAny, bool) {
	if o == nil || IsNil(o.Attributes) {
		return nil, false
	}
	return o.Attributes, true
}

// HasAttributes returns a boolean if a field has been set.
func (o *ProductBulkUpdateResponseV2Response) HasAttributes() bool {
	if o != nil && !IsNil(o.Attributes) {
		return true
	}

	return false
}

// SetAttributes gets a reference to the given map[string]ProtobufAny and assigns it to the Attributes field.
func (o *ProductBulkUpdateResponseV2Response) SetAttributes(v map[string]ProtobufAny) {
	o.Attributes = &v
}

func (o ProductBulkUpdateResponseV2Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProductBulkUpdateResponseV2Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ProductId) {
		toSerialize["productId"] = o.ProductId
	}
	if !IsNil(o.Attributes) {
		toSerialize["attributes"] = o.Attributes
	}
	return toSerialize, nil
}

type NullableProductBulkUpdateResponseV2Response struct {
	value *ProductBulkUpdateResponseV2Response
	isSet bool
}

func (v NullableProductBulkUpdateResponseV2Response) Get() *ProductBulkUpdateResponseV2Response {
	return v.value
}

func (v *NullableProductBulkUpdateResponseV2Response) Set(val *ProductBulkUpdateResponseV2Response) {
	v.value = val
	v.isSet = true
}

func (v NullableProductBulkUpdateResponseV2Response) IsSet() bool {
	return v.isSet
}

func (v *NullableProductBulkUpdateResponseV2Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProductBulkUpdateResponseV2Response(val *ProductBulkUpdateResponseV2Response) *NullableProductBulkUpdateResponseV2Response {
	return &NullableProductBulkUpdateResponseV2Response{value: val, isSet: true}
}

func (v NullableProductBulkUpdateResponseV2Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProductBulkUpdateResponseV2Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


