/*
Product Service

API for managing products

API version: v1
Contact: info@gemini-commerce.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package product

import (
	"encoding/json"
)

// checks if the EntitymanagerAttributeWriteError type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EntitymanagerAttributeWriteError{}

// EntitymanagerAttributeWriteError struct for EntitymanagerAttributeWriteError
type EntitymanagerAttributeWriteError struct {
	ErrorCode *string `json:"errorCode,omitempty"`
	AttributeCode *string `json:"attributeCode,omitempty"`
	Message *string `json:"message,omitempty"`
}

// NewEntitymanagerAttributeWriteError instantiates a new EntitymanagerAttributeWriteError object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEntitymanagerAttributeWriteError() *EntitymanagerAttributeWriteError {
	this := EntitymanagerAttributeWriteError{}
	return &this
}

// NewEntitymanagerAttributeWriteErrorWithDefaults instantiates a new EntitymanagerAttributeWriteError object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEntitymanagerAttributeWriteErrorWithDefaults() *EntitymanagerAttributeWriteError {
	this := EntitymanagerAttributeWriteError{}
	return &this
}

// GetErrorCode returns the ErrorCode field value if set, zero value otherwise.
func (o *EntitymanagerAttributeWriteError) GetErrorCode() string {
	if o == nil || IsNil(o.ErrorCode) {
		var ret string
		return ret
	}
	return *o.ErrorCode
}

// GetErrorCodeOk returns a tuple with the ErrorCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntitymanagerAttributeWriteError) GetErrorCodeOk() (*string, bool) {
	if o == nil || IsNil(o.ErrorCode) {
		return nil, false
	}
	return o.ErrorCode, true
}

// HasErrorCode returns a boolean if a field has been set.
func (o *EntitymanagerAttributeWriteError) HasErrorCode() bool {
	if o != nil && !IsNil(o.ErrorCode) {
		return true
	}

	return false
}

// SetErrorCode gets a reference to the given string and assigns it to the ErrorCode field.
func (o *EntitymanagerAttributeWriteError) SetErrorCode(v string) {
	o.ErrorCode = &v
}

// GetAttributeCode returns the AttributeCode field value if set, zero value otherwise.
func (o *EntitymanagerAttributeWriteError) GetAttributeCode() string {
	if o == nil || IsNil(o.AttributeCode) {
		var ret string
		return ret
	}
	return *o.AttributeCode
}

// GetAttributeCodeOk returns a tuple with the AttributeCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntitymanagerAttributeWriteError) GetAttributeCodeOk() (*string, bool) {
	if o == nil || IsNil(o.AttributeCode) {
		return nil, false
	}
	return o.AttributeCode, true
}

// HasAttributeCode returns a boolean if a field has been set.
func (o *EntitymanagerAttributeWriteError) HasAttributeCode() bool {
	if o != nil && !IsNil(o.AttributeCode) {
		return true
	}

	return false
}

// SetAttributeCode gets a reference to the given string and assigns it to the AttributeCode field.
func (o *EntitymanagerAttributeWriteError) SetAttributeCode(v string) {
	o.AttributeCode = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *EntitymanagerAttributeWriteError) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntitymanagerAttributeWriteError) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *EntitymanagerAttributeWriteError) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *EntitymanagerAttributeWriteError) SetMessage(v string) {
	o.Message = &v
}

func (o EntitymanagerAttributeWriteError) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EntitymanagerAttributeWriteError) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ErrorCode) {
		toSerialize["errorCode"] = o.ErrorCode
	}
	if !IsNil(o.AttributeCode) {
		toSerialize["attributeCode"] = o.AttributeCode
	}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	return toSerialize, nil
}

type NullableEntitymanagerAttributeWriteError struct {
	value *EntitymanagerAttributeWriteError
	isSet bool
}

func (v NullableEntitymanagerAttributeWriteError) Get() *EntitymanagerAttributeWriteError {
	return v.value
}

func (v *NullableEntitymanagerAttributeWriteError) Set(val *EntitymanagerAttributeWriteError) {
	v.value = val
	v.isSet = true
}

func (v NullableEntitymanagerAttributeWriteError) IsSet() bool {
	return v.isSet
}

func (v *NullableEntitymanagerAttributeWriteError) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEntitymanagerAttributeWriteError(val *EntitymanagerAttributeWriteError) *NullableEntitymanagerAttributeWriteError {
	return &NullableEntitymanagerAttributeWriteError{value: val, isSet: true}
}

func (v NullableEntitymanagerAttributeWriteError) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEntitymanagerAttributeWriteError) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


