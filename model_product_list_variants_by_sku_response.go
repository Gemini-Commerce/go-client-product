/*
Product Service

API for managing products

API version: v1
Contact: info@gemini-commerce.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package product

import (
	"encoding/json"
)

// checks if the ProductListVariantsBySkuResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProductListVariantsBySkuResponse{}

// ProductListVariantsBySkuResponse struct for ProductListVariantsBySkuResponse
type ProductListVariantsBySkuResponse struct {
	Variants []ProductProductVariant `json:"variants,omitempty"`
}

// NewProductListVariantsBySkuResponse instantiates a new ProductListVariantsBySkuResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProductListVariantsBySkuResponse() *ProductListVariantsBySkuResponse {
	this := ProductListVariantsBySkuResponse{}
	return &this
}

// NewProductListVariantsBySkuResponseWithDefaults instantiates a new ProductListVariantsBySkuResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProductListVariantsBySkuResponseWithDefaults() *ProductListVariantsBySkuResponse {
	this := ProductListVariantsBySkuResponse{}
	return &this
}

// GetVariants returns the Variants field value if set, zero value otherwise.
func (o *ProductListVariantsBySkuResponse) GetVariants() []ProductProductVariant {
	if o == nil || IsNil(o.Variants) {
		var ret []ProductProductVariant
		return ret
	}
	return o.Variants
}

// GetVariantsOk returns a tuple with the Variants field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductListVariantsBySkuResponse) GetVariantsOk() ([]ProductProductVariant, bool) {
	if o == nil || IsNil(o.Variants) {
		return nil, false
	}
	return o.Variants, true
}

// HasVariants returns a boolean if a field has been set.
func (o *ProductListVariantsBySkuResponse) HasVariants() bool {
	if o != nil && !IsNil(o.Variants) {
		return true
	}

	return false
}

// SetVariants gets a reference to the given []ProductProductVariant and assigns it to the Variants field.
func (o *ProductListVariantsBySkuResponse) SetVariants(v []ProductProductVariant) {
	o.Variants = v
}

func (o ProductListVariantsBySkuResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProductListVariantsBySkuResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Variants) {
		toSerialize["variants"] = o.Variants
	}
	return toSerialize, nil
}

type NullableProductListVariantsBySkuResponse struct {
	value *ProductListVariantsBySkuResponse
	isSet bool
}

func (v NullableProductListVariantsBySkuResponse) Get() *ProductListVariantsBySkuResponse {
	return v.value
}

func (v *NullableProductListVariantsBySkuResponse) Set(val *ProductListVariantsBySkuResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableProductListVariantsBySkuResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableProductListVariantsBySkuResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProductListVariantsBySkuResponse(val *ProductListVariantsBySkuResponse) *NullableProductListVariantsBySkuResponse {
	return &NullableProductListVariantsBySkuResponse{value: val, isSet: true}
}

func (v NullableProductListVariantsBySkuResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProductListVariantsBySkuResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


