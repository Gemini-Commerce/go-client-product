/*
product/product.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package product

import (
	"encoding/json"
)

// EntitymanagerEntityIdentifier struct for EntitymanagerEntityIdentifier
type EntitymanagerEntityIdentifier struct {
	Type *string `json:"type,omitempty"`
	Code *string `json:"code,omitempty"`
}

// NewEntitymanagerEntityIdentifier instantiates a new EntitymanagerEntityIdentifier object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEntitymanagerEntityIdentifier() *EntitymanagerEntityIdentifier {
	this := EntitymanagerEntityIdentifier{}
	return &this
}

// NewEntitymanagerEntityIdentifierWithDefaults instantiates a new EntitymanagerEntityIdentifier object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEntitymanagerEntityIdentifierWithDefaults() *EntitymanagerEntityIdentifier {
	this := EntitymanagerEntityIdentifier{}
	return &this
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *EntitymanagerEntityIdentifier) GetType() string {
	if o == nil || isNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntitymanagerEntityIdentifier) GetTypeOk() (*string, bool) {
	if o == nil || isNil(o.Type) {
    return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *EntitymanagerEntityIdentifier) HasType() bool {
	if o != nil && !isNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *EntitymanagerEntityIdentifier) SetType(v string) {
	o.Type = &v
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *EntitymanagerEntityIdentifier) GetCode() string {
	if o == nil || isNil(o.Code) {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntitymanagerEntityIdentifier) GetCodeOk() (*string, bool) {
	if o == nil || isNil(o.Code) {
    return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *EntitymanagerEntityIdentifier) HasCode() bool {
	if o != nil && !isNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *EntitymanagerEntityIdentifier) SetCode(v string) {
	o.Code = &v
}

func (o EntitymanagerEntityIdentifier) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !isNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	return json.Marshal(toSerialize)
}

type NullableEntitymanagerEntityIdentifier struct {
	value *EntitymanagerEntityIdentifier
	isSet bool
}

func (v NullableEntitymanagerEntityIdentifier) Get() *EntitymanagerEntityIdentifier {
	return v.value
}

func (v *NullableEntitymanagerEntityIdentifier) Set(val *EntitymanagerEntityIdentifier) {
	v.value = val
	v.isSet = true
}

func (v NullableEntitymanagerEntityIdentifier) IsSet() bool {
	return v.isSet
}

func (v *NullableEntitymanagerEntityIdentifier) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEntitymanagerEntityIdentifier(val *EntitymanagerEntityIdentifier) *NullableEntitymanagerEntityIdentifier {
	return &NullableEntitymanagerEntityIdentifier{value: val, isSet: true}
}

func (v NullableEntitymanagerEntityIdentifier) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEntitymanagerEntityIdentifier) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


