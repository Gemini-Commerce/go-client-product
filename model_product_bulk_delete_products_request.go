/*
Product Service

API for managing products

API version: v1
Contact: info@gemini-commerce.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package product

import (
	"encoding/json"
)

// checks if the ProductBulkDeleteProductsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProductBulkDeleteProductsRequest{}

// ProductBulkDeleteProductsRequest struct for ProductBulkDeleteProductsRequest
type ProductBulkDeleteProductsRequest struct {
	TenantId *string `json:"tenantId,omitempty"`
	Ids []string `json:"ids,omitempty"`
}

// NewProductBulkDeleteProductsRequest instantiates a new ProductBulkDeleteProductsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProductBulkDeleteProductsRequest() *ProductBulkDeleteProductsRequest {
	this := ProductBulkDeleteProductsRequest{}
	return &this
}

// NewProductBulkDeleteProductsRequestWithDefaults instantiates a new ProductBulkDeleteProductsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProductBulkDeleteProductsRequestWithDefaults() *ProductBulkDeleteProductsRequest {
	this := ProductBulkDeleteProductsRequest{}
	return &this
}

// GetTenantId returns the TenantId field value if set, zero value otherwise.
func (o *ProductBulkDeleteProductsRequest) GetTenantId() string {
	if o == nil || IsNil(o.TenantId) {
		var ret string
		return ret
	}
	return *o.TenantId
}

// GetTenantIdOk returns a tuple with the TenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductBulkDeleteProductsRequest) GetTenantIdOk() (*string, bool) {
	if o == nil || IsNil(o.TenantId) {
		return nil, false
	}
	return o.TenantId, true
}

// HasTenantId returns a boolean if a field has been set.
func (o *ProductBulkDeleteProductsRequest) HasTenantId() bool {
	if o != nil && !IsNil(o.TenantId) {
		return true
	}

	return false
}

// SetTenantId gets a reference to the given string and assigns it to the TenantId field.
func (o *ProductBulkDeleteProductsRequest) SetTenantId(v string) {
	o.TenantId = &v
}

// GetIds returns the Ids field value if set, zero value otherwise.
func (o *ProductBulkDeleteProductsRequest) GetIds() []string {
	if o == nil || IsNil(o.Ids) {
		var ret []string
		return ret
	}
	return o.Ids
}

// GetIdsOk returns a tuple with the Ids field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductBulkDeleteProductsRequest) GetIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.Ids) {
		return nil, false
	}
	return o.Ids, true
}

// HasIds returns a boolean if a field has been set.
func (o *ProductBulkDeleteProductsRequest) HasIds() bool {
	if o != nil && !IsNil(o.Ids) {
		return true
	}

	return false
}

// SetIds gets a reference to the given []string and assigns it to the Ids field.
func (o *ProductBulkDeleteProductsRequest) SetIds(v []string) {
	o.Ids = v
}

func (o ProductBulkDeleteProductsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProductBulkDeleteProductsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TenantId) {
		toSerialize["tenantId"] = o.TenantId
	}
	if !IsNil(o.Ids) {
		toSerialize["ids"] = o.Ids
	}
	return toSerialize, nil
}

type NullableProductBulkDeleteProductsRequest struct {
	value *ProductBulkDeleteProductsRequest
	isSet bool
}

func (v NullableProductBulkDeleteProductsRequest) Get() *ProductBulkDeleteProductsRequest {
	return v.value
}

func (v *NullableProductBulkDeleteProductsRequest) Set(val *ProductBulkDeleteProductsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableProductBulkDeleteProductsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableProductBulkDeleteProductsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProductBulkDeleteProductsRequest(val *ProductBulkDeleteProductsRequest) *NullableProductBulkDeleteProductsRequest {
	return &NullableProductBulkDeleteProductsRequest{value: val, isSet: true}
}

func (v NullableProductBulkDeleteProductsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProductBulkDeleteProductsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


