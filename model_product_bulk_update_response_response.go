/*
Product Service

API for managing products

API version: v1
Contact: info@gemini-commerce.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package product

import (
	"encoding/json"
)

// checks if the ProductBulkUpdateResponseResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProductBulkUpdateResponseResponse{}

// ProductBulkUpdateResponseResponse struct for ProductBulkUpdateResponseResponse
type ProductBulkUpdateResponseResponse struct {
	ProductId *string `json:"productId,omitempty"`
	Success *bool `json:"success,omitempty"`
	Attributes *map[string]ProtobufAny `json:"attributes,omitempty"`
}

// NewProductBulkUpdateResponseResponse instantiates a new ProductBulkUpdateResponseResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProductBulkUpdateResponseResponse() *ProductBulkUpdateResponseResponse {
	this := ProductBulkUpdateResponseResponse{}
	return &this
}

// NewProductBulkUpdateResponseResponseWithDefaults instantiates a new ProductBulkUpdateResponseResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProductBulkUpdateResponseResponseWithDefaults() *ProductBulkUpdateResponseResponse {
	this := ProductBulkUpdateResponseResponse{}
	return &this
}

// GetProductId returns the ProductId field value if set, zero value otherwise.
func (o *ProductBulkUpdateResponseResponse) GetProductId() string {
	if o == nil || IsNil(o.ProductId) {
		var ret string
		return ret
	}
	return *o.ProductId
}

// GetProductIdOk returns a tuple with the ProductId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductBulkUpdateResponseResponse) GetProductIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProductId) {
		return nil, false
	}
	return o.ProductId, true
}

// HasProductId returns a boolean if a field has been set.
func (o *ProductBulkUpdateResponseResponse) HasProductId() bool {
	if o != nil && !IsNil(o.ProductId) {
		return true
	}

	return false
}

// SetProductId gets a reference to the given string and assigns it to the ProductId field.
func (o *ProductBulkUpdateResponseResponse) SetProductId(v string) {
	o.ProductId = &v
}

// GetSuccess returns the Success field value if set, zero value otherwise.
func (o *ProductBulkUpdateResponseResponse) GetSuccess() bool {
	if o == nil || IsNil(o.Success) {
		var ret bool
		return ret
	}
	return *o.Success
}

// GetSuccessOk returns a tuple with the Success field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductBulkUpdateResponseResponse) GetSuccessOk() (*bool, bool) {
	if o == nil || IsNil(o.Success) {
		return nil, false
	}
	return o.Success, true
}

// HasSuccess returns a boolean if a field has been set.
func (o *ProductBulkUpdateResponseResponse) HasSuccess() bool {
	if o != nil && !IsNil(o.Success) {
		return true
	}

	return false
}

// SetSuccess gets a reference to the given bool and assigns it to the Success field.
func (o *ProductBulkUpdateResponseResponse) SetSuccess(v bool) {
	o.Success = &v
}

// GetAttributes returns the Attributes field value if set, zero value otherwise.
func (o *ProductBulkUpdateResponseResponse) GetAttributes() map[string]ProtobufAny {
	if o == nil || IsNil(o.Attributes) {
		var ret map[string]ProtobufAny
		return ret
	}
	return *o.Attributes
}

// GetAttributesOk returns a tuple with the Attributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductBulkUpdateResponseResponse) GetAttributesOk() (*map[string]ProtobufAny, bool) {
	if o == nil || IsNil(o.Attributes) {
		return nil, false
	}
	return o.Attributes, true
}

// HasAttributes returns a boolean if a field has been set.
func (o *ProductBulkUpdateResponseResponse) HasAttributes() bool {
	if o != nil && !IsNil(o.Attributes) {
		return true
	}

	return false
}

// SetAttributes gets a reference to the given map[string]ProtobufAny and assigns it to the Attributes field.
func (o *ProductBulkUpdateResponseResponse) SetAttributes(v map[string]ProtobufAny) {
	o.Attributes = &v
}

func (o ProductBulkUpdateResponseResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProductBulkUpdateResponseResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ProductId) {
		toSerialize["productId"] = o.ProductId
	}
	if !IsNil(o.Success) {
		toSerialize["success"] = o.Success
	}
	if !IsNil(o.Attributes) {
		toSerialize["attributes"] = o.Attributes
	}
	return toSerialize, nil
}

type NullableProductBulkUpdateResponseResponse struct {
	value *ProductBulkUpdateResponseResponse
	isSet bool
}

func (v NullableProductBulkUpdateResponseResponse) Get() *ProductBulkUpdateResponseResponse {
	return v.value
}

func (v *NullableProductBulkUpdateResponseResponse) Set(val *ProductBulkUpdateResponseResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableProductBulkUpdateResponseResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableProductBulkUpdateResponseResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProductBulkUpdateResponseResponse(val *ProductBulkUpdateResponseResponse) *NullableProductBulkUpdateResponseResponse {
	return &NullableProductBulkUpdateResponseResponse{value: val, isSet: true}
}

func (v NullableProductBulkUpdateResponseResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProductBulkUpdateResponseResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


