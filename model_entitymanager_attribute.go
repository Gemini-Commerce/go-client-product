/*
product/product.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package product

import (
	"encoding/json"
)

// EntitymanagerAttribute struct for EntitymanagerAttribute
type EntitymanagerAttribute struct {
	EntityId   *string             `json:"entityId,omitempty"`
	Code       *string             `json:"code,omitempty"`
	Label      *string             `json:"label,omitempty"`
	Type       *EntitymanagerTypes `json:"type,omitempty"`
	OptionList *string             `json:"optionList,omitempty"`
	Entity     *string             `json:"entity,omitempty"`
	Default    *string             `json:"default,omitempty"`
	IsRequired *bool               `json:"isRequired,omitempty"`
	IsSystem   *bool               `json:"isSystem,omitempty"`
	IsRepeated *bool               `json:"isRepeated,omitempty"`
}

// NewEntitymanagerAttribute instantiates a new EntitymanagerAttribute object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEntitymanagerAttribute() *EntitymanagerAttribute {
	this := EntitymanagerAttribute{}
	var type_ EntitymanagerTypes = TEXT
	this.Type = &type_
	return &this
}

// NewEntitymanagerAttributeWithDefaults instantiates a new EntitymanagerAttribute object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEntitymanagerAttributeWithDefaults() *EntitymanagerAttribute {
	this := EntitymanagerAttribute{}
	var type_ EntitymanagerTypes = TEXT
	this.Type = &type_
	return &this
}

// GetEntityId returns the EntityId field value if set, zero value otherwise.
func (o *EntitymanagerAttribute) GetEntityId() string {
	if o == nil || isNil(o.EntityId) {
		var ret string
		return ret
	}
	return *o.EntityId
}

// GetEntityIdOk returns a tuple with the EntityId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntitymanagerAttribute) GetEntityIdOk() (*string, bool) {
	if o == nil || isNil(o.EntityId) {
		return nil, false
	}
	return o.EntityId, true
}

// HasEntityId returns a boolean if a field has been set.
func (o *EntitymanagerAttribute) HasEntityId() bool {
	if o != nil && !isNil(o.EntityId) {
		return true
	}

	return false
}

// SetEntityId gets a reference to the given string and assigns it to the EntityId field.
func (o *EntitymanagerAttribute) SetEntityId(v string) {
	o.EntityId = &v
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *EntitymanagerAttribute) GetCode() string {
	if o == nil || isNil(o.Code) {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntitymanagerAttribute) GetCodeOk() (*string, bool) {
	if o == nil || isNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *EntitymanagerAttribute) HasCode() bool {
	if o != nil && !isNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *EntitymanagerAttribute) SetCode(v string) {
	o.Code = &v
}

// GetLabel returns the Label field value if set, zero value otherwise.
func (o *EntitymanagerAttribute) GetLabel() string {
	if o == nil || isNil(o.Label) {
		var ret string
		return ret
	}
	return *o.Label
}

// GetLabelOk returns a tuple with the Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntitymanagerAttribute) GetLabelOk() (*string, bool) {
	if o == nil || isNil(o.Label) {
		return nil, false
	}
	return o.Label, true
}

// HasLabel returns a boolean if a field has been set.
func (o *EntitymanagerAttribute) HasLabel() bool {
	if o != nil && !isNil(o.Label) {
		return true
	}

	return false
}

// SetLabel gets a reference to the given string and assigns it to the Label field.
func (o *EntitymanagerAttribute) SetLabel(v string) {
	o.Label = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *EntitymanagerAttribute) GetType() EntitymanagerTypes {
	if o == nil || isNil(o.Type) {
		var ret EntitymanagerTypes
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntitymanagerAttribute) GetTypeOk() (*EntitymanagerTypes, bool) {
	if o == nil || isNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *EntitymanagerAttribute) HasType() bool {
	if o != nil && !isNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given EntitymanagerTypes and assigns it to the Type field.
func (o *EntitymanagerAttribute) SetType(v EntitymanagerTypes) {
	o.Type = &v
}

// GetOptionList returns the OptionList field value if set, zero value otherwise.
func (o *EntitymanagerAttribute) GetOptionList() string {
	if o == nil || isNil(o.OptionList) {
		var ret string
		return ret
	}
	return *o.OptionList
}

// GetOptionListOk returns a tuple with the OptionList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntitymanagerAttribute) GetOptionListOk() (*string, bool) {
	if o == nil || isNil(o.OptionList) {
		return nil, false
	}
	return o.OptionList, true
}

// HasOptionList returns a boolean if a field has been set.
func (o *EntitymanagerAttribute) HasOptionList() bool {
	if o != nil && !isNil(o.OptionList) {
		return true
	}

	return false
}

// SetOptionList gets a reference to the given string and assigns it to the OptionList field.
func (o *EntitymanagerAttribute) SetOptionList(v string) {
	o.OptionList = &v
}

// GetEntity returns the Entity field value if set, zero value otherwise.
func (o *EntitymanagerAttribute) GetEntity() string {
	if o == nil || isNil(o.Entity) {
		var ret string
		return ret
	}
	return *o.Entity
}

// GetEntityOk returns a tuple with the Entity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntitymanagerAttribute) GetEntityOk() (*string, bool) {
	if o == nil || isNil(o.Entity) {
		return nil, false
	}
	return o.Entity, true
}

// HasEntity returns a boolean if a field has been set.
func (o *EntitymanagerAttribute) HasEntity() bool {
	if o != nil && !isNil(o.Entity) {
		return true
	}

	return false
}

// SetEntity gets a reference to the given string and assigns it to the Entity field.
func (o *EntitymanagerAttribute) SetEntity(v string) {
	o.Entity = &v
}

// GetDefault returns the Default field value if set, zero value otherwise.
func (o *EntitymanagerAttribute) GetDefault() string {
	if o == nil || isNil(o.Default) {
		var ret string
		return ret
	}
	return *o.Default
}

// GetDefaultOk returns a tuple with the Default field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntitymanagerAttribute) GetDefaultOk() (*string, bool) {
	if o == nil || isNil(o.Default) {
		return nil, false
	}
	return o.Default, true
}

// HasDefault returns a boolean if a field has been set.
func (o *EntitymanagerAttribute) HasDefault() bool {
	if o != nil && !isNil(o.Default) {
		return true
	}

	return false
}

// SetDefault gets a reference to the given string and assigns it to the Default field.
func (o *EntitymanagerAttribute) SetDefault(v string) {
	o.Default = &v
}

// GetIsRequired returns the IsRequired field value if set, zero value otherwise.
func (o *EntitymanagerAttribute) GetIsRequired() bool {
	if o == nil || isNil(o.IsRequired) {
		var ret bool
		return ret
	}
	return *o.IsRequired
}

// GetIsRequiredOk returns a tuple with the IsRequired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntitymanagerAttribute) GetIsRequiredOk() (*bool, bool) {
	if o == nil || isNil(o.IsRequired) {
		return nil, false
	}
	return o.IsRequired, true
}

// HasIsRequired returns a boolean if a field has been set.
func (o *EntitymanagerAttribute) HasIsRequired() bool {
	if o != nil && !isNil(o.IsRequired) {
		return true
	}

	return false
}

// SetIsRequired gets a reference to the given bool and assigns it to the IsRequired field.
func (o *EntitymanagerAttribute) SetIsRequired(v bool) {
	o.IsRequired = &v
}

// GetIsSystem returns the IsSystem field value if set, zero value otherwise.
func (o *EntitymanagerAttribute) GetIsSystem() bool {
	if o == nil || isNil(o.IsSystem) {
		var ret bool
		return ret
	}
	return *o.IsSystem
}

// GetIsSystemOk returns a tuple with the IsSystem field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntitymanagerAttribute) GetIsSystemOk() (*bool, bool) {
	if o == nil || isNil(o.IsSystem) {
		return nil, false
	}
	return o.IsSystem, true
}

// HasIsSystem returns a boolean if a field has been set.
func (o *EntitymanagerAttribute) HasIsSystem() bool {
	if o != nil && !isNil(o.IsSystem) {
		return true
	}

	return false
}

// SetIsSystem gets a reference to the given bool and assigns it to the IsSystem field.
func (o *EntitymanagerAttribute) SetIsSystem(v bool) {
	o.IsSystem = &v
}

// GetIsRepeated returns the IsRepeated field value if set, zero value otherwise.
func (o *EntitymanagerAttribute) GetIsRepeated() bool {
	if o == nil || isNil(o.IsRepeated) {
		var ret bool
		return ret
	}
	return *o.IsRepeated
}

// GetIsRepeatedOk returns a tuple with the IsRepeated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntitymanagerAttribute) GetIsRepeatedOk() (*bool, bool) {
	if o == nil || isNil(o.IsRepeated) {
		return nil, false
	}
	return o.IsRepeated, true
}

// HasIsRepeated returns a boolean if a field has been set.
func (o *EntitymanagerAttribute) HasIsRepeated() bool {
	if o != nil && !isNil(o.IsRepeated) {
		return true
	}

	return false
}

// SetIsRepeated gets a reference to the given bool and assigns it to the IsRepeated field.
func (o *EntitymanagerAttribute) SetIsRepeated(v bool) {
	o.IsRepeated = &v
}

func (o EntitymanagerAttribute) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.EntityId) {
		toSerialize["entityId"] = o.EntityId
	}
	if !isNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !isNil(o.Label) {
		toSerialize["label"] = o.Label
	}
	if !isNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !isNil(o.OptionList) {
		toSerialize["optionList"] = o.OptionList
	}
	if !isNil(o.Entity) {
		toSerialize["entity"] = o.Entity
	}
	if !isNil(o.Default) {
		toSerialize["default"] = o.Default
	}
	if !isNil(o.IsRequired) {
		toSerialize["isRequired"] = o.IsRequired
	}
	if !isNil(o.IsSystem) {
		toSerialize["isSystem"] = o.IsSystem
	}
	if !isNil(o.IsRepeated) {
		toSerialize["isRepeated"] = o.IsRepeated
	}
	return json.Marshal(toSerialize)
}

type NullableEntitymanagerAttribute struct {
	value *EntitymanagerAttribute
	isSet bool
}

func (v NullableEntitymanagerAttribute) Get() *EntitymanagerAttribute {
	return v.value
}

func (v *NullableEntitymanagerAttribute) Set(val *EntitymanagerAttribute) {
	v.value = val
	v.isSet = true
}

func (v NullableEntitymanagerAttribute) IsSet() bool {
	return v.isSet
}

func (v *NullableEntitymanagerAttribute) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEntitymanagerAttribute(val *EntitymanagerAttribute) *NullableEntitymanagerAttribute {
	return &NullableEntitymanagerAttribute{value: val, isSet: true}
}

func (v NullableEntitymanagerAttribute) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEntitymanagerAttribute) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
