openapi: 3.0.1
info:
  contact:
    email: info@gemini-commerce.com
    name: Gemini Team
  description: |-
    Introducing our revolutionary Product Management Service! Designed to streamline your product inventory and elevate customer experiences, our cutting-edge protobuf service is a game-changer in the world of efficient product management.

    With our service, you can effortlessly create new products, allowing you to quickly bring your ideas to life and expand your catalog. Retrieve product information in a snap, providing accurate and personalized details to your customers based on their specific needs and preferences.

    Stay ahead of the competition by easily updating product information, ensuring your catalog is always up-to-date and optimized. Seamlessly remove products from your inventory when needed, maintaining a clean and relevant product selection.

    Enhance the visual appeal of your products with our advanced media gallery functionalities. Effortlessly add and update captivating images and videos to showcase your products in the best possible light, engaging your customers and driving conversions.

    Personalization is key in today's market, and our service enables you to offer unique options to your customers. Easily create and manage lists of customizable options for your products, providing flexibility and tailoring to individual preferences.

    Attributes play a vital role in defining products, and our service empowers you to effectively manage them. From bulk attribute creation to listing and retrieving attribute options, our service ensures your product information is rich and comprehensive.

    Our service extends its capabilities to entity management, allowing you to effortlessly handle different entities and create customized options lists associated with them. This provides further flexibility and customization options for your product offerings.

    When it comes to bulk updates, our service has you covered. Effortlessly update multiple products simultaneously, saving you time and streamlining your operations.

    Finding specific products and variants is a breeze with our service. Quickly locate products based on their unique stock keeping unit (SKU) values, ensuring efficient inventory management and smooth order fulfillment.

    Experience a new level of efficiency and productivity with our Product Management Service. Unlock the full potential of streamlined product management and empower your business to thrive in today's competitive market. Try our service today and elevate your product management to new heights!
  license:
    name: Gemini fair use license
    url: https://gemini-commerce.com/api/fair-use-license
  title: Product Service
  version: v1
servers:
- url: https://product.api.gogemini.io/
paths:
  /product.Product/AddMediaGalleryEntry:
    post:
      description: |-
        The AddMediaGalleryEntry endpoint allows users to add a new media entry to the gallery of a specific product. To make a request to this endpoint, users need to provide the necessary information in the specified format. The request includes the tenant_id to specify the relevant tenant, the product_id to identify the target product, and the asset_grn which represents the globally unique identifier for the media asset being added.
        Additionally, the position field indicates the desired position of the media entry within the gallery, allowing users to control the order in which the media items are displayed. The metadata field, which is a repeated field, provides the option to include additional metadata associated with the media entry.
      operationId: AddMediaGalleryEntry
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/productAddMediaGalleryEntryRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/productAddMediaGalleryEntryResponse'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An internal error occurred is thrown when an incompatible payload
            is sent
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      security:
      - standardAuthorization: []
      summary: Add Media Gallery Entry
      tags:
      - Product
      x-codegen-request-body-name: body
  /product.Product/BulkCreateAttribute:
    post:
      operationId: BulkCreateAttribute
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/entitymanagerBulkCreateAttributeRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/entitymanagerBulkCreateAttributeResponse'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An internal error occurred is thrown when an incompatible payload
            is sent
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      security:
      - standardAuthorization: []
      summary: Bulk Create Attribute
      tags:
      - Product
      x-codegen-request-body-name: body
  /product.Product/BulkUpdate:
    post:
      operationId: BulkUpdate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/productBulkUpdateRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/productBulkUpdateResponse'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An internal error occurred is thrown when an incompatible payload
            is sent
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      security:
      - standardAuthorization: []
      summary: Bulk Update Products
      tags:
      - Product
      x-codegen-request-body-name: body
  /product.Product/CreateAttributeOptions:
    post:
      operationId: CreateAttributeOptions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/entitymanagerCreateAttributeOptionsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/entitymanagerCreateAttributeOptionsResponse'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An internal error occurred is thrown when an incompatible payload
            is sent
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      security:
      - standardAuthorization: []
      summary: Create Attribute Options
      tags:
      - Product
      x-codegen-request-body-name: body
  /product.Product/CreateEntity:
    post:
      description: "The CreateEntity endpoint allows users to define and create a\
        \ new entity with custom attributes, providing a flexible way to represent\
        \ and manage different data structures within the system. By making a request\
        \ to this endpoint, users can create a new entity that serves as an abstraction\
        \ of a product or any other domain-specific object. This endpoint empowers\
        \ users to define the specific attributes that compose the entity, such as\
        \ color, composition, technical details, or any other relevant properties.\
        \ Utilize the CreateEntity endpoint to dynamically extend and adapt your system's\
        \ data model to accommodate diverse business requirements and efficiently\
        \ manage various types of entities."
      operationId: CreateEntity
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/entitymanagerEntity'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/entitymanagerCreateEntityResponse'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An internal error occurred is thrown when an incompatible payload
            is sent
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      security:
      - standardAuthorization: []
      summary: Create Entity
      tags:
      - Product
      x-codegen-request-body-name: body
  /product.Product/CreateOptionsList:
    post:
      description: "The CreateOptionsList endpoint allows users to create an OptionList,\
        \ which represents a list of predefined options for assigning to an attribute.\
        \ By making a request to this endpoint with the provided request format, users\
        \ can create a new OptionList by specifying the relevant tenant ID and providing\
        \ the OptionList object containing the predefined options. This functionality\
        \ facilitates efficient management and assignment of predefined attribute\
        \ values, ensuring consistency and flexibility within the system."
      operationId: CreateOptionsList
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/entitymanagerCreateOptionsListRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/entitymanagerCreateOptionsListResponse'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An internal error occurred is thrown when an incompatible payload
            is sent
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      security:
      - standardAuthorization: []
      summary: Create Options List
      tags:
      - Product
      x-codegen-request-body-name: body
  /product.Product/CreateProduct:
    post:
      description: " The CreateProduct endpoint enables users to create a new product\
        \ within the system. By sending a request to this endpoint, users can add\
        \ a new product to the database, providing essential details such as name,\
        \ description, status, and other relevant attributes. This endpoint facilitates\
        \ seamless product management and expansion of the product catalog."
      operationId: CreateProduct
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/productCreateProductRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/productCreateProductResponse'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: "When an endpoint receives a request with an invalid or unauthorized\
            \ JWT token, a 401 error (Unauthorized) is thrown. This error indicates\
            \ that the client is not authenticated or lacks the necessary permissions\
            \ to access the requested resource. The server responds with the 401 error\
            \ to enforce security measures and restrict unauthorized access. Clients\
            \ should handle this error by taking appropriate actions, such as re-authenticating\
            \ or obtaining a valid token, to gain authorized access."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An internal error occurred is thrown when an incompatible payload
            is sent
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      security:
      - standardAuthorization: []
      summary: Create Product
      tags:
      - Product
      x-codegen-request-body-name: body
  /product.Product/Delete:
    post:
      description: "The DeleteProduct endpoint enables users to delete a product from\
        \ the system. By sending a request to this endpoint, users can delete a product\
        \ by providing its unique identifier."
      operationId: DeleteProduct
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/productDeleteRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/productDeleteResponse'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An internal error occurred is thrown when an incompatible payload
            is sent
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      security:
      - standardAuthorization: []
      summary: Delete Product
      tags:
      - Product
      x-codegen-request-body-name: body
  /product.Product/GetAttributeOption:
    post:
      operationId: GetAttributeOption
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/entitymanagerGetAttributeOptionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/entitymanagerGetAttributeOptionResponse'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An internal error occurred is thrown when an incompatible payload
            is sent
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      security:
      - standardAuthorization: []
      summary: Get Attribute Option
      tags:
      - Product
      x-codegen-request-body-name: body
  /product.Product/GetAttributeOptionByCode:
    post:
      operationId: GetAttributeOptionByCode
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/entitymanagerGetAttributeOptionByCodeRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/entitymanagerGetAttributeOptionByCodeResponse'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An internal error occurred is thrown when an incompatible payload
            is sent
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      security:
      - standardAuthorization: []
      summary: Get Attribute Option By Code
      tags:
      - Product
      x-codegen-request-body-name: body
  /product.Product/GetAttributeOptions:
    post:
      operationId: GetAttributeOptions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/entitymanagerGetAttributeOptionsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/entitymanagerGetAttributeOptionsResponse'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An internal error occurred is thrown when an incompatible payload
            is sent
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      security:
      - standardAuthorization: []
      summary: Get Attribute Options
      tags:
      - Product
      x-codegen-request-body-name: body
  /product.Product/GetEntity:
    post:
      operationId: GetEntity
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/entitymanagerEntityRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/entitymanagerEntity'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An internal error occurred is thrown when an incompatible payload
            is sent
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      security:
      - standardAuthorization: []
      summary: Get Entity
      tags:
      - Product
      x-codegen-request-body-name: body
  /product.Product/GetOptionsList:
    post:
      operationId: GetOptionsList
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/entitymanagerGetOptionsListRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/entitymanagerGetOptionsListResponse'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An internal error occurred is thrown when an incompatible payload
            is sent
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      security:
      - standardAuthorization: []
      summary: Get Options List
      tags:
      - Product
      x-codegen-request-body-name: body
  /product.Product/GetProduct:
    post:
      description: "The GetProduct endpoint enables users to retrieve a product from\
        \ the system. By sending a request to this endpoint, users can retrieve a\
        \ product by providing its unique identifier."
      operationId: GetProduct
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/productGetProductRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/productGetProductResponse'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An internal error occurred is thrown when an incompatible payload
            is sent
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      security:
      - standardAuthorization: []
      summary: Get Product
      tags:
      - Product
      x-codegen-request-body-name: body
  /product.Product/GetProductByCode:
    post:
      description: "The GetProductByCode endpoint enables users to retrieve a product\
        \ from the system. By sending a request to this endpoint, users can retrieve\
        \ a product by providing its unique code."
      operationId: GetProductByCode
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/productGetProductByCodeRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/productGetProductByCodeResponse'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An internal error occurred is thrown when an incompatible payload
            is sent
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      security:
      - standardAuthorization: []
      summary: Get Product By Code
      tags:
      - Product
      x-codegen-request-body-name: body
  /product.Product/GetProductByUrlKey:
    post:
      description: "The GetProductByUrlKey endpoint enables users to retrieve a product\
        \ from the system. By sending a request to this endpoint, users can retrieve\
        \ a product by providing its unique url key."
      operationId: GetProductByUrlKey
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/productGetProductByUrlKeyRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/productGetProductByUrlKeyResponse'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An internal error occurred is thrown when an incompatible payload
            is sent
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      security:
      - standardAuthorization: []
      summary: Get Product By Url Key
      tags:
      - Product
      x-codegen-request-body-name: body
  /product.Product/ListAttributeOptions:
    post:
      operationId: ListAttributeOptions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/entitymanagerListAttributeOptionsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/entitymanagerListAttributeOptionsResponse'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An internal error occurred is thrown when an incompatible payload
            is sent
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      security:
      - standardAuthorization: []
      summary: List Attribute Options
      tags:
      - Product
      x-codegen-request-body-name: body
  /product.Product/ListEntities:
    post:
      operationId: ListEntities
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/entitymanagerListEntitiesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/entitymanagerListEntitiesResponse'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An internal error occurred is thrown when an incompatible payload
            is sent
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      security:
      - standardAuthorization: []
      summary: List Entities
      tags:
      - Product
      x-codegen-request-body-name: body
  /product.Product/ListOptionsLists:
    post:
      description: "The ListOptionsLists endpoint allows users to retrieve a list\
        \ of OptionLists available in the system. By making a request to this endpoint\
        \ with the provided request format, users can obtain all the OptionLists associated\
        \ with the specified tenant. This functionality enables users to access and\
        \ manage the predefined options available for various attributes within the\
        \ system. Utilizing the ListOptionsLists endpoint provides a convenient way\
        \ to retrieve and work with OptionLists, facilitating efficient management\
        \ of attribute options and ensuring consistency in attribute values throughout\
        \ the system."
      operationId: ListOptionsLists
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/entitymanagerListOptionsListsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/entitymanagerListOptionsListsResponse'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An internal error occurred is thrown when an incompatible payload
            is sent
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      security:
      - standardAuthorization: []
      summary: List Options Lists
      tags:
      - Product
      x-codegen-request-body-name: body
  /product.Product/ListProducts:
    post:
      description: "The ListProducts endpoint provides users with the ability to retrieve\
        \ a filtered list of products based on specific criteria. By including filter\
        \ parameters in the request, users can customize the response to only include\
        \ products that meet certain conditions, such as price range, category, availability,\
        \ or any other relevant attributes. This endpoint empowers users to efficiently\
        \ narrow down the product selection and retrieve tailored results."
      operationId: ListProducts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/productListProductsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/productListProductsResponse'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An internal error occurred is thrown when an incompatible payload
            is sent
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      security:
      - standardAuthorization: []
      summary: List Products
      tags:
      - Product
      x-codegen-request-body-name: body
  /product.Product/ListProductsByIds:
    post:
      description: "The ListProductsByIds endpoint allows users to retrieve a list\
        \ of products based on provided IDs. By making a request to this endpoint\
        \ and specifying a set of product IDs, users can retrieve detailed information\
        \ about the corresponding products. This endpoint facilitates efficient retrieval\
        \ of specific products, enabling applications to display accurate and targeted\
        \ product information to users."
      operationId: ListProductsByIds
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/productListProductsByIdsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/productListProductsByIdsResponse'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An internal error occurred is thrown when an incompatible payload
            is sent
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      security:
      - standardAuthorization: []
      summary: List Products By Ids
      tags:
      - Product
      x-codegen-request-body-name: body
  /product.Product/ListProductsBySku:
    post:
      operationId: ListProductsBySku
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/productListProductsBySkuRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/productListProductsBySkuResponse'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An internal error occurred is thrown when an incompatible payload
            is sent
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      security:
      - standardAuthorization: []
      summary: List Products By Sku
      tags:
      - Product
      x-codegen-request-body-name: body
  /product.Product/ListVariantsBySku:
    post:
      operationId: ListVariantsBySku
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/productListVariantsBySkuRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/productListVariantsBySkuResponse'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An internal error occurred is thrown when an incompatible payload
            is sent
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      security:
      - standardAuthorization: []
      summary: List Product Variants By Sku
      tags:
      - Product
      x-codegen-request-body-name: body
  /product.Product/RemoveMediaGalleryEntry:
    post:
      description: "The RemoveMediaGalleryEntry endpoint allows users to remove a\
        \ specific media entry from a product's gallery. By making a request to this\
        \ endpoint and providing the tenant ID, product ID, and the unique identifier\
        \ of the media entry, users can easily manage and update the visual content\
        \ of a product's gallery. "
      operationId: RemoveMediaGalleryEntry
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/productRemoveMediaGalleryEntryRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/productRemoveMediaGalleryEntryResponse'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An internal error occurred is thrown when an incompatible payload
            is sent
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      security:
      - standardAuthorization: []
      summary: Remove Media Gallery Entry
      tags:
      - Product
      x-codegen-request-body-name: body
  /product.Product/UpdateAttributeOptions:
    post:
      operationId: UpdateAttributeOptions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/entitymanagerUpdateAttributeOptionsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/entitymanagerUpdateAttributeOptionsResponse'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An internal error occurred is thrown when an incompatible payload
            is sent
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      security:
      - standardAuthorization: []
      summary: Update Attribute Options
      tags:
      - Product
      x-codegen-request-body-name: body
  /product.Product/UpdateMediaGalleryEntry:
    post:
      description: "The UpdateMediaGalleryEntry endpoint allows users to modify and\
        \ update a specific media entry within a product's gallery. By sending a request\
        \ to this endpoint and providing the necessary information, users can efficiently\
        \ update the media asset, position, and metadata associated with the entry."
      operationId: UpdateMediaGalleryEntry
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/productUpdateMediaGalleryEntryRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/productUpdateMediaGalleryEntryResponse'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An internal error occurred is thrown when an incompatible payload
            is sent
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      security:
      - standardAuthorization: []
      summary: Update Media Gallery Entry
      tags:
      - Product
      x-codegen-request-body-name: body
  /product.Product/UpdateOptionsList:
    post:
      operationId: UpdateOptionsList
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/entitymanagerUpdateOptionsListRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/entitymanagerUpdateOptionsListResponse'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An internal error occurred is thrown when an incompatible payload
            is sent
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      security:
      - standardAuthorization: []
      summary: Update Options List
      tags:
      - Product
      x-codegen-request-body-name: body
  /product.Product/UpdateProduct:
    post:
      description: "The UpdateProduct endpoint allows users to modify and update the\
        \ details of an existing product within the system. By sending a request to\
        \ this endpoint and specifying the product ID along with the updated attributes,\
        \ users can make changes to the product's name, description, price, availability,\
        \ or any other relevant properties. This endpoint provides a flexible and\
        \ efficient way to keep product information up-to-date and accurately reflect\
        \ changes in your catalog."
      operationId: UpdateProduct
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/productUpdateProductRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/productUpdateProductResponse'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An internal error occurred is thrown when an incompatible payload
            is sent
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      security:
      - standardAuthorization: []
      summary: Update Product
      tags:
      - Product
      x-codegen-request-body-name: body
components:
  schemas:
    BulkUpdateRequestPayload:
      properties:
        updateMask:
          $ref: '#/components/schemas/productFieldMask'
        attributes:
          additionalProperties:
            $ref: '#/components/schemas/protobufAny'
          type: object
      type: object
    BulkUpdateResponseResponse:
      example:
        productId: productId
        success: true
        attributes:
          key:
            '@type': '@type'
            value: value
      properties:
        productId:
          type: string
        success:
          type: boolean
        attributes:
          additionalProperties:
            $ref: '#/components/schemas/protobufAny'
          type: object
      type: object
    ListProductsRequestFilter:
      properties:
        createdAtStart:
          format: date-time
          title: optional
          type: string
        createdAtEnd:
          format: date-time
          type: string
        updatedAtStart:
          format: date-time
          type: string
        updatedAtEnd:
          format: date-time
          type: string
        status:
          type: boolean
      type: object
    entitymanagerAttribute:
      example:
        isSystem: true
        isRequired: true
        default: default
        code: code
        optionList: optionList
        entityId: entityId
        isRepeated: true
        label: label
        type: null
        entity: entity
      properties:
        entityId:
          type: string
        code:
          type: string
        label:
          type: string
        type:
          $ref: '#/components/schemas/entitymanagerTypes'
        optionList:
          type: string
        entity:
          type: string
        default:
          type: string
        isRequired:
          type: boolean
        isSystem:
          type: boolean
        isRepeated:
          type: boolean
      type: object
    entitymanagerAttributeOption:
      example:
        code: code
        sort: 0
        id: id
        value:
          value:
            key: value
        swatches:
        - grn: grn
          hex: hex
        - grn: grn
          hex: hex
        option:
          key: option
      properties:
        option:
          additionalProperties:
            type: string
          type: object
        sort:
          format: int64
          type: integer
        id:
          type: string
        code:
          type: string
        value:
          $ref: '#/components/schemas/productentitymanagerLocalizedText'
        swatches:
          items:
            $ref: '#/components/schemas/entitymanagerAttributeOptionSwatch'
          type: array
      type: object
    entitymanagerAttributeOptionErrors:
      example:
        error: error
        option:
          key: option
      properties:
        error:
          type: string
        option:
          additionalProperties:
            type: string
          type: object
      type: object
    entitymanagerAttributeOptionSwatch:
      example:
        grn: grn
        hex: hex
      properties:
        grn:
          type: string
        hex:
          type: string
      type: object
    entitymanagerAttributeWriteError:
      example:
        attributeCode: attributeCode
        errorCode: errorCode
        message: message
      properties:
        errorCode:
          type: string
        attributeCode:
          type: string
        message:
          type: string
      type: object
    entitymanagerAttributeWriteErrors:
      example:
        attributeWriteErrors:
        - attributeCode: attributeCode
          errorCode: errorCode
          message: message
        - attributeCode: attributeCode
          errorCode: errorCode
          message: message
      properties:
        attributeWriteErrors:
          items:
            $ref: '#/components/schemas/entitymanagerAttributeWriteError'
          type: array
      type: object
    entitymanagerBulkCreateAttributeRequest:
      properties:
        tenantId:
          type: string
        entityData:
          $ref: '#/components/schemas/entitymanagerEntityIdentifier'
        entityId:
          type: string
        attributes:
          items:
            $ref: '#/components/schemas/entitymanagerAttribute'
          type: array
      type: object
    entitymanagerBulkCreateAttributeResponse:
      example:
        attributes:
        - isSystem: true
          isRequired: true
          default: default
          code: code
          optionList: optionList
          entityId: entityId
          isRepeated: true
          label: label
          type: null
          entity: entity
        - isSystem: true
          isRequired: true
          default: default
          code: code
          optionList: optionList
          entityId: entityId
          isRepeated: true
          label: label
          type: null
          entity: entity
      properties:
        attributes:
          items:
            $ref: '#/components/schemas/entitymanagerAttribute'
          type: array
      type: object
    entitymanagerCreateAttributeOptionsRequest:
      properties:
        tenantId:
          type: string
        listCode:
          type: string
        options:
          items:
            $ref: '#/components/schemas/entitymanagerAttributeOption'
          type: array
      type: object
    entitymanagerCreateAttributeOptionsResponse:
      example:
        options:
        - code: code
          sort: 0
          id: id
          value:
            value:
              key: value
          swatches:
          - grn: grn
            hex: hex
          - grn: grn
            hex: hex
          option:
            key: option
        - code: code
          sort: 0
          id: id
          value:
            value:
              key: value
          swatches:
          - grn: grn
            hex: hex
          - grn: grn
            hex: hex
          option:
            key: option
        errors:
        - error: error
          option:
            key: option
        - error: error
          option:
            key: option
      properties:
        options:
          items:
            $ref: '#/components/schemas/entitymanagerAttributeOption'
          type: array
        errors:
          items:
            $ref: '#/components/schemas/entitymanagerAttributeOptionErrors'
          type: array
      type: object
    entitymanagerCreateEntityResponse:
      example:
        entity:
          relationships:
          - relationships
          - relationships
          code: code
          parentCode: parentCode
          tenantId: tenantId
          attributes:
          - isSystem: true
            isRequired: true
            default: default
            code: code
            optionList: optionList
            entityId: entityId
            isRepeated: true
            label: label
            type: null
            entity: entity
          - isSystem: true
            isRequired: true
            default: default
            code: code
            optionList: optionList
            entityId: entityId
            isRepeated: true
            label: label
            type: null
            entity: entity
          id: id
          label: label
          type: type
        attributeWriteErrors:
          attributeWriteErrors:
          - attributeCode: attributeCode
            errorCode: errorCode
            message: message
          - attributeCode: attributeCode
            errorCode: errorCode
            message: message
      properties:
        attributeWriteErrors:
          $ref: '#/components/schemas/entitymanagerAttributeWriteErrors'
        entity:
          $ref: '#/components/schemas/entitymanagerEntity'
      type: object
    entitymanagerCreateOptionsListRequest:
      properties:
        tenantId:
          type: string
        optionList:
          $ref: '#/components/schemas/entitymanagerOptionsList'
      type: object
    entitymanagerCreateOptionsListResponse:
      example:
        optionList:
          code: code
          name: name
      properties:
        optionList:
          $ref: '#/components/schemas/entitymanagerOptionsList'
      type: object
    entitymanagerEntity:
      example:
        relationships:
        - relationships
        - relationships
        code: code
        parentCode: parentCode
        tenantId: tenantId
        attributes:
        - isSystem: true
          isRequired: true
          default: default
          code: code
          optionList: optionList
          entityId: entityId
          isRepeated: true
          label: label
          type: null
          entity: entity
        - isSystem: true
          isRequired: true
          default: default
          code: code
          optionList: optionList
          entityId: entityId
          isRepeated: true
          label: label
          type: null
          entity: entity
        id: id
        label: label
        type: type
      properties:
        tenantId:
          type: string
        id:
          type: string
        type:
          type: string
        code:
          type: string
        parentCode:
          type: string
        label:
          type: string
        relationships:
          items:
            type: string
          type: array
        attributes:
          items:
            $ref: '#/components/schemas/entitymanagerAttribute'
          type: array
      type: object
    entitymanagerEntityIdentifier:
      properties:
        type:
          type: string
        code:
          type: string
      type: object
    entitymanagerEntityRequest:
      properties:
        tenantId:
          type: string
        entityData:
          $ref: '#/components/schemas/entitymanagerEntityIdentifier'
        entityId:
          type: string
      type: object
    entitymanagerGetAttributeOptionByCodeRequest:
      properties:
        tenantId:
          type: string
        listCode:
          type: string
        code:
          type: string
      type: object
    entitymanagerGetAttributeOptionByCodeResponse:
      example:
        option:
          code: code
          sort: 0
          id: id
          value:
            value:
              key: value
          swatches:
          - grn: grn
            hex: hex
          - grn: grn
            hex: hex
          option:
            key: option
      properties:
        option:
          $ref: '#/components/schemas/entitymanagerAttributeOption'
      type: object
    entitymanagerGetAttributeOptionRequest:
      properties:
        tenantId:
          type: string
        listCode:
          type: string
        optionId:
          type: string
      type: object
    entitymanagerGetAttributeOptionResponse:
      example:
        option:
          code: code
          sort: 0
          id: id
          value:
            value:
              key: value
          swatches:
          - grn: grn
            hex: hex
          - grn: grn
            hex: hex
          option:
            key: option
      properties:
        option:
          $ref: '#/components/schemas/entitymanagerAttributeOption'
      type: object
    entitymanagerGetAttributeOptionsRequest:
      properties:
        tenantId:
          type: string
        optionIds:
          items:
            $ref: '#/components/schemas/entitymanagerGetAttributeOptionsRequestOption'
          type: array
      type: object
    entitymanagerGetAttributeOptionsRequestOption:
      properties:
        listCode:
          type: string
        optionId:
          type: string
      type: object
    entitymanagerGetAttributeOptionsResponse:
      example:
        options:
        - listCode: listCode
          option:
            code: code
            sort: 0
            id: id
            value:
              value:
                key: value
            swatches:
            - grn: grn
              hex: hex
            - grn: grn
              hex: hex
            option:
              key: option
        - listCode: listCode
          option:
            code: code
            sort: 0
            id: id
            value:
              value:
                key: value
            swatches:
            - grn: grn
              hex: hex
            - grn: grn
              hex: hex
            option:
              key: option
      properties:
        options:
          items:
            $ref: '#/components/schemas/entitymanagerGetAttributeOptionsResponseOption'
          type: array
      type: object
    entitymanagerGetAttributeOptionsResponseOption:
      example:
        listCode: listCode
        option:
          code: code
          sort: 0
          id: id
          value:
            value:
              key: value
          swatches:
          - grn: grn
            hex: hex
          - grn: grn
            hex: hex
          option:
            key: option
      properties:
        listCode:
          type: string
        option:
          $ref: '#/components/schemas/entitymanagerAttributeOption'
      type: object
    entitymanagerGetOptionsListRequest:
      properties:
        tenantId:
          type: string
        listCode:
          type: string
      type: object
    entitymanagerGetOptionsListResponse:
      example:
        optionList:
          code: code
          name: name
      properties:
        optionList:
          $ref: '#/components/schemas/entitymanagerOptionsList'
      type: object
    entitymanagerListAttributeOptionsRequest:
      properties:
        tenantId:
          type: string
        listCode:
          type: string
      type: object
    entitymanagerListAttributeOptionsResponse:
      example:
        options:
        - code: code
          sort: 0
          id: id
          value:
            value:
              key: value
          swatches:
          - grn: grn
            hex: hex
          - grn: grn
            hex: hex
          option:
            key: option
        - code: code
          sort: 0
          id: id
          value:
            value:
              key: value
          swatches:
          - grn: grn
            hex: hex
          - grn: grn
            hex: hex
          option:
            key: option
      properties:
        options:
          items:
            $ref: '#/components/schemas/entitymanagerAttributeOption'
          type: array
      type: object
    entitymanagerListEntitiesRequest:
      properties:
        tenantId:
          type: string
        pageSize:
          format: int32
          type: integer
      type: object
    entitymanagerListEntitiesResponse:
      example:
        entities:
        - relationships:
          - relationships
          - relationships
          code: code
          parentCode: parentCode
          tenantId: tenantId
          attributes:
          - isSystem: true
            isRequired: true
            default: default
            code: code
            optionList: optionList
            entityId: entityId
            isRepeated: true
            label: label
            type: null
            entity: entity
          - isSystem: true
            isRequired: true
            default: default
            code: code
            optionList: optionList
            entityId: entityId
            isRepeated: true
            label: label
            type: null
            entity: entity
          id: id
          label: label
          type: type
        - relationships:
          - relationships
          - relationships
          code: code
          parentCode: parentCode
          tenantId: tenantId
          attributes:
          - isSystem: true
            isRequired: true
            default: default
            code: code
            optionList: optionList
            entityId: entityId
            isRepeated: true
            label: label
            type: null
            entity: entity
          - isSystem: true
            isRequired: true
            default: default
            code: code
            optionList: optionList
            entityId: entityId
            isRepeated: true
            label: label
            type: null
            entity: entity
          id: id
          label: label
          type: type
        nextPage: 0
      properties:
        entities:
          items:
            $ref: '#/components/schemas/entitymanagerEntity'
          type: array
        nextPage:
          format: int32
          type: integer
      type: object
    entitymanagerListOptionsListsRequest:
      properties:
        tenantId:
          type: string
      type: object
    entitymanagerListOptionsListsResponse:
      example:
        options:
        - code: code
          name: name
        - code: code
          name: name
      properties:
        options:
          items:
            $ref: '#/components/schemas/entitymanagerOptionsList'
          type: array
      type: object
    entitymanagerOptionsList:
      example:
        code: code
        name: name
      properties:
        code:
          type: string
        name:
          type: string
      type: object
    entitymanagerTypes:
      default: TEXT
      enum:
      - TEXT
      - NUMBER
      - BOOLEAN
      - DATETIME
      - EXTERNAL
      - EMBED
      - FLOAT32
      type: string
    entitymanagerUpdateAttributeOptionsRequest:
      properties:
        tenantId:
          type: string
        listCode:
          type: string
        options:
          items:
            $ref: '#/components/schemas/entitymanagerAttributeOption'
          type: array
      type: object
    entitymanagerUpdateAttributeOptionsResponse:
      example:
        options:
        - code: code
          sort: 0
          id: id
          value:
            value:
              key: value
          swatches:
          - grn: grn
            hex: hex
          - grn: grn
            hex: hex
          option:
            key: option
        - code: code
          sort: 0
          id: id
          value:
            value:
              key: value
          swatches:
          - grn: grn
            hex: hex
          - grn: grn
            hex: hex
          option:
            key: option
        errors:
        - error: error
          option:
            key: option
        - error: error
          option:
            key: option
      properties:
        options:
          items:
            $ref: '#/components/schemas/entitymanagerAttributeOption'
          type: array
        errors:
          items:
            $ref: '#/components/schemas/entitymanagerAttributeOptionErrors'
          type: array
      type: object
    entitymanagerUpdateOptionsListRequest:
      properties:
        tenantId:
          type: string
        optionList:
          $ref: '#/components/schemas/entitymanagerOptionsList'
      type: object
    entitymanagerUpdateOptionsListResponse:
      example:
        optionList:
          code: code
          name: name
      properties:
        optionList:
          $ref: '#/components/schemas/entitymanagerOptionsList'
      type: object
    productAddMediaGalleryEntryRequest:
      properties:
        tenantId:
          type: string
        productId:
          type: string
        assetGrn:
          type: string
        position:
          format: int64
          type: integer
        metadata:
          items:
            $ref: '#/components/schemas/productMediaGalleryEntryMetadata'
          type: array
      type: object
    productAddMediaGalleryEntryResponse:
      example:
        mediaGalleryEntry:
          assetGrn: assetGrn
          metadata:
          - roles:
            - roles
            - roles
            alt:
              value:
                key: value
          - roles:
            - roles
            - roles
            alt:
              value:
                key: value
          id: id
          position: 0
      properties:
        mediaGalleryEntry:
          $ref: '#/components/schemas/productMediaGalleryEntry'
      type: object
    productAttributeResponseError:
      example:
        attributeCode: attributeCode
        code: code
        message: message
      properties:
        code:
          type: string
        message:
          type: string
        attributeCode:
          type: string
      type: object
    productBulkUpdateRequest:
      properties:
        tenantId:
          type: string
        productIds:
          items:
            type: string
          type: array
        payload:
          $ref: '#/components/schemas/BulkUpdateRequestPayload'
      type: object
    productBulkUpdateResponse:
      example:
        productResponse:
        - productId: productId
          success: true
          attributes:
            key:
              '@type': '@type'
              value: value
        - productId: productId
          success: true
          attributes:
            key:
              '@type': '@type'
              value: value
      properties:
        productResponse:
          items:
            $ref: '#/components/schemas/BulkUpdateResponseResponse'
          type: array
      type: object
    productCreateProductRequest:
      description: The CreateProductRequest message is used to create a new product
        within the system. It contains various fields that allow specifying the details
        and attributes of the product.
      example:
        tenant_id: 00000000-0000-0000-0000-000000000000
        entity_type: product
        entity_code: __DEFAULT__
        code: best-sneakers
        is_configurable: false
        url_key:
          value:
            default: best-sneakers
            en_US: best-sneakers
            it_IT: migliori-sneakers
        attributes:
          name:
            '@type': type.googleapis.com/google.protobuf.StringValue
            value: Best Sneakers
      properties:
        tenantId:
          description: Represents the ID of the tenant associated with the product.
          pattern: "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
          title: string
          type: string
        entityType:
          description: Specifies the type of entity for the product.
          title: string
          type: string
        entityCode:
          description: Indicates the code of the entity associated with the product.
          title: string
          type: string
        code:
          description: Represents the unique code or identifier for the product.
          title: string
          type: string
        isConfigurable:
          description: Specifies whether the product has variants or not.
          title: boolean
          type: boolean
        variantAttributes:
          description: Contains a list of attributes specific to the product variants.
          items:
            type: string
          title: "string[]"
          type: array
        isVirtual:
          description: Indicates whether the product is virtual or not.
          title: boolean
          type: boolean
        isGiftcard:
          description: Specifies whether the product is a gift card or not.
          title: boolean
          type: boolean
        urlKey:
          $ref: '#/components/schemas/productLocalizedText'
        maxSaleableQuantity:
          description: Specifies the maximum quantity that can be sold for the product
            in each order.
          format: int64
          title: int64
          type: integer
        attributes:
          additionalProperties:
            $ref: '#/components/schemas/protobufAny'
          description: "Contains a map of additional attributes associated with the\
            \ product, where the key is the attribute name and the value is any type\
            \ of value."
          type: object
        variants:
          additionalProperties:
            $ref: '#/components/schemas/productProductVariant'
          description: "Represents a map of product variants associated with the product,\
            \ where the key is the variant ID or code, and the value is a ProductVariant\
            \ message."
          type: object
      title: Create Product Request
      type: object
    productCreateProductResponse:
      description: The CreateProductResponse message is used to provide a response
        after creating a product within the system. It includes fields that indicate
        the success of the product creation and any errors encountered during the
        process.
      example:
        attributeErrors:
        - attributeCode: attributeCode
          code: code
          message: message
        - attributeCode: attributeCode
          code: code
          message: message
        success: true
        productErrors:
        - code: code
          message: message
        - code: code
          message: message
        id: id
      properties:
        success:
          description: Indicates whether the product creation was successful or not.
          title: boolean
          type: boolean
        id:
          description: Represents the ID of the created product.
          title: string
          type: string
        productErrors:
          description: "Contains a list of ProductResponseError messages, indicating\
            \ any errors related to the product creation."
          items:
            $ref: '#/components/schemas/productProductResponseError'
          title: "ProductResponseError[]"
          type: array
        attributeErrors:
          description: "Contains a list of AttributeResponseError messages, indicating\
            \ any errors related to the attributes of the product."
          items:
            $ref: '#/components/schemas/productAttributeResponseError'
          title: "AttributeResponseError[]"
          type: array
      title: Create Product Response
      type: object
    productDeleteRequest:
      properties:
        product:
          $ref: '#/components/schemas/productProductEntity'
      type: object
    productDeleteResponse:
      example:
        success: true
      properties:
        success:
          type: boolean
      type: object
    productFieldMask:
      properties:
        paths:
          items:
            type: string
          type: array
      type: object
    productGetProductByCodeRequest:
      properties:
        tenantId:
          type: string
        code:
          type: string
      type: object
    productGetProductByCodeResponse:
      example:
        product:
          grn: grn
          entityCode: entityCode
          code: code
          variantAttributes:
          - variantAttributes
          - variantAttributes
          isConfigurable: true
          entityType: entityType
          variants:
            key:
              grn: grn
              attributes:
                key:
                  '@type': '@type'
                  value: value
              id: id
              maxSaleableQuantity: 0
          maxSaleableQuantity: 6
          urlKey:
            value:
              key: value
          createdAt: createdAt
          isGiftcard: true
          tenantId: tenantId
          mediaGallery:
            entries:
            - assetGrn: assetGrn
              metadata:
              - roles:
                - roles
                - roles
                alt:
                  value:
                    key: value
              - roles:
                - roles
                - roles
                alt:
                  value:
                    key: value
              id: id
              position: 0
            - assetGrn: assetGrn
              metadata:
              - roles:
                - roles
                - roles
                alt:
                  value:
                    key: value
              - roles:
                - roles
                - roles
                alt:
                  value:
                    key: value
              id: id
              position: 0
          attributes:
            key:
              '@type': '@type'
              value: value
          id: id
          isVirtual: true
          updatedAt: updatedAt
      properties:
        product:
          $ref: '#/components/schemas/productProductEntity'
      type: object
    productGetProductByUrlKeyRequest:
      properties:
        tenantId:
          type: string
        urlKey:
          type: string
        locale:
          type: string
      type: object
    productGetProductByUrlKeyResponse:
      example:
        product:
          grn: grn
          entityCode: entityCode
          code: code
          variantAttributes:
          - variantAttributes
          - variantAttributes
          isConfigurable: true
          entityType: entityType
          variants:
            key:
              grn: grn
              attributes:
                key:
                  '@type': '@type'
                  value: value
              id: id
              maxSaleableQuantity: 0
          maxSaleableQuantity: 6
          urlKey:
            value:
              key: value
          createdAt: createdAt
          isGiftcard: true
          tenantId: tenantId
          mediaGallery:
            entries:
            - assetGrn: assetGrn
              metadata:
              - roles:
                - roles
                - roles
                alt:
                  value:
                    key: value
              - roles:
                - roles
                - roles
                alt:
                  value:
                    key: value
              id: id
              position: 0
            - assetGrn: assetGrn
              metadata:
              - roles:
                - roles
                - roles
                alt:
                  value:
                    key: value
              - roles:
                - roles
                - roles
                alt:
                  value:
                    key: value
              id: id
              position: 0
          attributes:
            key:
              '@type': '@type'
              value: value
          id: id
          isVirtual: true
          updatedAt: updatedAt
      properties:
        product:
          $ref: '#/components/schemas/productProductEntity'
      type: object
    productGetProductRequest:
      properties:
        tenantId:
          type: string
        id:
          type: string
      type: object
    productGetProductResponse:
      example:
        product:
          grn: grn
          entityCode: entityCode
          code: code
          variantAttributes:
          - variantAttributes
          - variantAttributes
          isConfigurable: true
          entityType: entityType
          variants:
            key:
              grn: grn
              attributes:
                key:
                  '@type': '@type'
                  value: value
              id: id
              maxSaleableQuantity: 0
          maxSaleableQuantity: 6
          urlKey:
            value:
              key: value
          createdAt: createdAt
          isGiftcard: true
          tenantId: tenantId
          mediaGallery:
            entries:
            - assetGrn: assetGrn
              metadata:
              - roles:
                - roles
                - roles
                alt:
                  value:
                    key: value
              - roles:
                - roles
                - roles
                alt:
                  value:
                    key: value
              id: id
              position: 0
            - assetGrn: assetGrn
              metadata:
              - roles:
                - roles
                - roles
                alt:
                  value:
                    key: value
              - roles:
                - roles
                - roles
                alt:
                  value:
                    key: value
              id: id
              position: 0
          attributes:
            key:
              '@type': '@type'
              value: value
          id: id
          isVirtual: true
          updatedAt: updatedAt
      properties:
        product:
          $ref: '#/components/schemas/productProductEntity'
      type: object
    productListProductsByIdsRequest:
      properties:
        tenantId:
          type: string
        ids:
          items:
            type: string
          type: array
      type: object
    productListProductsByIdsResponse:
      example:
        products:
        - grn: grn
          entityCode: entityCode
          code: code
          variantAttributes:
          - variantAttributes
          - variantAttributes
          isConfigurable: true
          entityType: entityType
          variants:
            key:
              grn: grn
              attributes:
                key:
                  '@type': '@type'
                  value: value
              id: id
              maxSaleableQuantity: 0
          maxSaleableQuantity: 6
          urlKey:
            value:
              key: value
          createdAt: createdAt
          isGiftcard: true
          tenantId: tenantId
          mediaGallery:
            entries:
            - assetGrn: assetGrn
              metadata:
              - roles:
                - roles
                - roles
                alt:
                  value:
                    key: value
              - roles:
                - roles
                - roles
                alt:
                  value:
                    key: value
              id: id
              position: 0
            - assetGrn: assetGrn
              metadata:
              - roles:
                - roles
                - roles
                alt:
                  value:
                    key: value
              - roles:
                - roles
                - roles
                alt:
                  value:
                    key: value
              id: id
              position: 0
          attributes:
            key:
              '@type': '@type'
              value: value
          id: id
          isVirtual: true
          updatedAt: updatedAt
        - grn: grn
          entityCode: entityCode
          code: code
          variantAttributes:
          - variantAttributes
          - variantAttributes
          isConfigurable: true
          entityType: entityType
          variants:
            key:
              grn: grn
              attributes:
                key:
                  '@type': '@type'
                  value: value
              id: id
              maxSaleableQuantity: 0
          maxSaleableQuantity: 6
          urlKey:
            value:
              key: value
          createdAt: createdAt
          isGiftcard: true
          tenantId: tenantId
          mediaGallery:
            entries:
            - assetGrn: assetGrn
              metadata:
              - roles:
                - roles
                - roles
                alt:
                  value:
                    key: value
              - roles:
                - roles
                - roles
                alt:
                  value:
                    key: value
              id: id
              position: 0
            - assetGrn: assetGrn
              metadata:
              - roles:
                - roles
                - roles
                alt:
                  value:
                    key: value
              - roles:
                - roles
                - roles
                alt:
                  value:
                    key: value
              id: id
              position: 0
          attributes:
            key:
              '@type': '@type'
              value: value
          id: id
          isVirtual: true
          updatedAt: updatedAt
      properties:
        products:
          items:
            $ref: '#/components/schemas/productProductEntity'
          type: array
      type: object
    productListProductsBySkuRequest:
      properties:
        tenantId:
          type: string
        sku:
          type: string
      type: object
    productListProductsBySkuResponse:
      example:
        products:
        - grn: grn
          entityCode: entityCode
          code: code
          variantAttributes:
          - variantAttributes
          - variantAttributes
          isConfigurable: true
          entityType: entityType
          variants:
            key:
              grn: grn
              attributes:
                key:
                  '@type': '@type'
                  value: value
              id: id
              maxSaleableQuantity: 0
          maxSaleableQuantity: 6
          urlKey:
            value:
              key: value
          createdAt: createdAt
          isGiftcard: true
          tenantId: tenantId
          mediaGallery:
            entries:
            - assetGrn: assetGrn
              metadata:
              - roles:
                - roles
                - roles
                alt:
                  value:
                    key: value
              - roles:
                - roles
                - roles
                alt:
                  value:
                    key: value
              id: id
              position: 0
            - assetGrn: assetGrn
              metadata:
              - roles:
                - roles
                - roles
                alt:
                  value:
                    key: value
              - roles:
                - roles
                - roles
                alt:
                  value:
                    key: value
              id: id
              position: 0
          attributes:
            key:
              '@type': '@type'
              value: value
          id: id
          isVirtual: true
          updatedAt: updatedAt
        - grn: grn
          entityCode: entityCode
          code: code
          variantAttributes:
          - variantAttributes
          - variantAttributes
          isConfigurable: true
          entityType: entityType
          variants:
            key:
              grn: grn
              attributes:
                key:
                  '@type': '@type'
                  value: value
              id: id
              maxSaleableQuantity: 0
          maxSaleableQuantity: 6
          urlKey:
            value:
              key: value
          createdAt: createdAt
          isGiftcard: true
          tenantId: tenantId
          mediaGallery:
            entries:
            - assetGrn: assetGrn
              metadata:
              - roles:
                - roles
                - roles
                alt:
                  value:
                    key: value
              - roles:
                - roles
                - roles
                alt:
                  value:
                    key: value
              id: id
              position: 0
            - assetGrn: assetGrn
              metadata:
              - roles:
                - roles
                - roles
                alt:
                  value:
                    key: value
              - roles:
                - roles
                - roles
                alt:
                  value:
                    key: value
              id: id
              position: 0
          attributes:
            key:
              '@type': '@type'
              value: value
          id: id
          isVirtual: true
          updatedAt: updatedAt
      properties:
        products:
          items:
            $ref: '#/components/schemas/productProductEntity'
          type: array
      type: object
    productListProductsRequest:
      properties:
        tenantId:
          type: string
        pageSize:
          format: uint64
          type: string
        pageToken:
          type: string
        filter:
          $ref: '#/components/schemas/ListProductsRequestFilter'
        filterMask:
          items:
            type: string
          type: array
      type: object
    productListProductsResponse:
      example:
        nextPageToken: nextPageToken
        products:
        - grn: grn
          entityCode: entityCode
          code: code
          variantAttributes:
          - variantAttributes
          - variantAttributes
          isConfigurable: true
          entityType: entityType
          variants:
            key:
              grn: grn
              attributes:
                key:
                  '@type': '@type'
                  value: value
              id: id
              maxSaleableQuantity: 0
          maxSaleableQuantity: 6
          urlKey:
            value:
              key: value
          createdAt: createdAt
          isGiftcard: true
          tenantId: tenantId
          mediaGallery:
            entries:
            - assetGrn: assetGrn
              metadata:
              - roles:
                - roles
                - roles
                alt:
                  value:
                    key: value
              - roles:
                - roles
                - roles
                alt:
                  value:
                    key: value
              id: id
              position: 0
            - assetGrn: assetGrn
              metadata:
              - roles:
                - roles
                - roles
                alt:
                  value:
                    key: value
              - roles:
                - roles
                - roles
                alt:
                  value:
                    key: value
              id: id
              position: 0
          attributes:
            key:
              '@type': '@type'
              value: value
          id: id
          isVirtual: true
          updatedAt: updatedAt
        - grn: grn
          entityCode: entityCode
          code: code
          variantAttributes:
          - variantAttributes
          - variantAttributes
          isConfigurable: true
          entityType: entityType
          variants:
            key:
              grn: grn
              attributes:
                key:
                  '@type': '@type'
                  value: value
              id: id
              maxSaleableQuantity: 0
          maxSaleableQuantity: 6
          urlKey:
            value:
              key: value
          createdAt: createdAt
          isGiftcard: true
          tenantId: tenantId
          mediaGallery:
            entries:
            - assetGrn: assetGrn
              metadata:
              - roles:
                - roles
                - roles
                alt:
                  value:
                    key: value
              - roles:
                - roles
                - roles
                alt:
                  value:
                    key: value
              id: id
              position: 0
            - assetGrn: assetGrn
              metadata:
              - roles:
                - roles
                - roles
                alt:
                  value:
                    key: value
              - roles:
                - roles
                - roles
                alt:
                  value:
                    key: value
              id: id
              position: 0
          attributes:
            key:
              '@type': '@type'
              value: value
          id: id
          isVirtual: true
          updatedAt: updatedAt
      properties:
        products:
          items:
            $ref: '#/components/schemas/productProductEntity'
          type: array
        nextPageToken:
          type: string
      type: object
    productListVariantsBySkuRequest:
      properties:
        tenantId:
          type: string
        sku:
          type: string
      type: object
    productListVariantsBySkuResponse:
      example:
        variants:
        - grn: grn
          attributes:
            key:
              '@type': '@type'
              value: value
          id: id
          maxSaleableQuantity: 0
        - grn: grn
          attributes:
            key:
              '@type': '@type'
              value: value
          id: id
          maxSaleableQuantity: 0
      properties:
        variants:
          items:
            $ref: '#/components/schemas/productProductVariant'
          type: array
      type: object
    productLocalizedText:
      example:
        value:
          key: value
      properties:
        value:
          additionalProperties:
            type: string
          type: object
      type: object
    productMediaGallery:
      example:
        entries:
        - assetGrn: assetGrn
          metadata:
          - roles:
            - roles
            - roles
            alt:
              value:
                key: value
          - roles:
            - roles
            - roles
            alt:
              value:
                key: value
          id: id
          position: 0
        - assetGrn: assetGrn
          metadata:
          - roles:
            - roles
            - roles
            alt:
              value:
                key: value
          - roles:
            - roles
            - roles
            alt:
              value:
                key: value
          id: id
          position: 0
      properties:
        entries:
          items:
            $ref: '#/components/schemas/productMediaGalleryEntry'
          type: array
      type: object
    productMediaGalleryEntry:
      example:
        assetGrn: assetGrn
        metadata:
        - roles:
          - roles
          - roles
          alt:
            value:
              key: value
        - roles:
          - roles
          - roles
          alt:
            value:
              key: value
        id: id
        position: 0
      properties:
        id:
          type: string
        assetGrn:
          type: string
        position:
          format: int64
          type: integer
        metadata:
          items:
            $ref: '#/components/schemas/productMediaGalleryEntryMetadata'
          type: array
      type: object
    productMediaGalleryEntryMetadata:
      example:
        roles:
        - roles
        - roles
        alt:
          value:
            key: value
      properties:
        roles:
          items:
            type: string
          type: array
        alt:
          $ref: '#/components/schemas/productLocalizedText'
      type: object
    productProductEntity:
      example:
        grn: grn
        entityCode: entityCode
        code: code
        variantAttributes:
        - variantAttributes
        - variantAttributes
        isConfigurable: true
        entityType: entityType
        variants:
          key:
            grn: grn
            attributes:
              key:
                '@type': '@type'
                value: value
            id: id
            maxSaleableQuantity: 0
        maxSaleableQuantity: 6
        urlKey:
          value:
            key: value
        createdAt: createdAt
        isGiftcard: true
        tenantId: tenantId
        mediaGallery:
          entries:
          - assetGrn: assetGrn
            metadata:
            - roles:
              - roles
              - roles
              alt:
                value:
                  key: value
            - roles:
              - roles
              - roles
              alt:
                value:
                  key: value
            id: id
            position: 0
          - assetGrn: assetGrn
            metadata:
            - roles:
              - roles
              - roles
              alt:
                value:
                  key: value
            - roles:
              - roles
              - roles
              alt:
                value:
                  key: value
            id: id
            position: 0
        attributes:
          key:
            '@type': '@type'
            value: value
        id: id
        isVirtual: true
        updatedAt: updatedAt
      properties:
        tenantId:
          type: string
        grn:
          type: string
        entityType:
          type: string
        entityCode:
          type: string
        id:
          type: string
        code:
          type: string
        variantAttributes:
          items:
            type: string
          type: array
        isConfigurable:
          type: boolean
        isVirtual:
          type: boolean
        isGiftcard:
          type: boolean
        urlKey:
          $ref: '#/components/schemas/productLocalizedText'
        attributes:
          additionalProperties:
            $ref: '#/components/schemas/protobufAny'
          type: object
        variants:
          additionalProperties:
            $ref: '#/components/schemas/productProductVariant'
          type: object
        mediaGallery:
          $ref: '#/components/schemas/productMediaGallery'
        maxSaleableQuantity:
          format: int64
          type: integer
        createdAt:
          format: int64
          type: string
        updatedAt:
          format: int64
          type: string
      type: object
    productProductResponseError:
      example:
        code: code
        message: message
      properties:
        code:
          type: string
        message:
          type: string
      type: object
    productProductVariant:
      example:
        grn: grn
        attributes:
          key:
            '@type': '@type'
            value: value
        id: id
        maxSaleableQuantity: 0
      properties:
        id:
          type: string
        grn:
          type: string
        maxSaleableQuantity:
          format: int64
          type: integer
        attributes:
          additionalProperties:
            $ref: '#/components/schemas/protobufAny'
          type: object
      type: object
    productRemoveMediaGalleryEntryRequest:
      properties:
        tenantId:
          type: string
        productId:
          type: string
        id:
          type: string
      type: object
    productRemoveMediaGalleryEntryResponse:
      type: object
    productUpdateMediaGalleryEntryRequest:
      properties:
        tenantId:
          type: string
        productId:
          type: string
        id:
          type: string
        assetGrn:
          type: string
        position:
          format: int64
          type: integer
        metadata:
          items:
            $ref: '#/components/schemas/productMediaGalleryEntryMetadata'
          type: array
      type: object
    productUpdateMediaGalleryEntryResponse:
      type: object
    productUpdateProductRequest:
      properties:
        tenantId:
          type: string
        id:
          type: string
        code:
          type: string
        attributesMask:
          $ref: '#/components/schemas/productFieldMask'
        urlKey:
          $ref: '#/components/schemas/productLocalizedText'
        maxSaleableQuantity:
          format: int64
          type: integer
        attributes:
          additionalProperties:
            $ref: '#/components/schemas/protobufAny'
          type: object
        variants:
          additionalProperties:
            $ref: '#/components/schemas/productProductVariant'
          type: object
      type: object
    productUpdateProductResponse:
      example:
        attributeErrors:
        - attributeCode: attributeCode
          code: code
          message: message
        - attributeCode: attributeCode
          code: code
          message: message
        success: true
        productErrors:
        - code: code
          message: message
        - code: code
          message: message
      properties:
        success:
          type: boolean
        productErrors:
          items:
            $ref: '#/components/schemas/productProductResponseError'
          type: array
        attributeErrors:
          items:
            $ref: '#/components/schemas/productAttributeResponseError'
          type: array
      type: object
    productentitymanagerLocalizedText:
      example:
        value:
          key: value
      properties:
        value:
          additionalProperties:
            type: string
          type: object
      type: object
    protobufAny:
      description: |-
        `Any` contains an arbitrary serialized protocol buffer message along with a
        URL that describes the type of the serialized message.

        Protobuf library provides support to pack/unpack Any values in the form
        of utility functions or additional generated methods of the Any type.

        Example 1: Pack and unpack a message in C++.

            Foo foo = ...;
            Any any;
            any.PackFrom(foo);
            ...
            if (any.UnpackTo(&foo)) {
              ...
            }

        Example 2: Pack and unpack a message in Java.

            Foo foo = ...;
            Any any = Any.pack(foo);
            ...
            if (any.is(Foo.class)) {
              foo = any.unpack(Foo.class);
            }

        Example 3: Pack and unpack a message in Python.

            foo = Foo(...)
            any = Any()
            any.Pack(foo)
            ...
            if any.Is(Foo.DESCRIPTOR):
              any.Unpack(foo)
              ...

        Example 4: Pack and unpack a message in Go

             foo := &pb.Foo{...}
             any, err := anypb.New(foo)
             if err != nil {
               ...
             }
             ...
             foo := &pb.Foo{}
             if err := any.UnmarshalTo(foo); err != nil {
               ...
             }

        The pack methods provided by protobuf library will by default use
        'type.googleapis.com/full.type.name' as the type URL and the unpack
        methods only use the fully qualified type name after the last '/'
        in the type URL, for example "foo.bar.com/x/y.z" will yield type
        name "y.z".


        JSON

        The JSON representation of an `Any` value uses the regular
        representation of the deserialized, embedded message, with an
        additional field `@type` which contains the type URL. Example:

            package google.profile;
            message Person {
              string first_name = 1;
              string last_name = 2;
            }

            {
              "@type": "type.googleapis.com/google.profile.Person",
              "firstName": <string>,
              "lastName": <string>
            }

        If the embedded message type is well-known and has a custom JSON
        representation, that representation will be embedded adding a field
        `value` which holds the custom JSON in addition to the `@type`
        field. Example (for message [google.protobuf.Duration][]):

            {
              "@type": "type.googleapis.com/google.protobuf.Duration",
              "value": "1.212s"
            }
      example:
        '@type': '@type'
        value: value
      properties:
        '@type':
          description: |-
            A URL/resource name that uniquely identifies the type of the serialized
            protocol buffer message. This string must contain at least
            one "/" character. The last segment of the URL's path must represent
            the fully qualified name of the type (as in
            `path/google.protobuf.Duration`). The name should be in a canonical form
            (e.g., leading "." is not accepted).

            In practice, teams usually precompile into the binary all types that they
            expect it to use in the context of Any. However, for URLs which use the
            scheme `http`, `https`, or no scheme, one can optionally set up a type
            server that maps type URLs to message definitions as follows:

            * If no scheme is provided, `https` is assumed.
            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
              value in binary format, or produce an error.
            * Applications are allowed to cache lookup results based on the
              URL, or have them precompiled into a binary to avoid any
              lookup. Therefore, binary compatibility needs to be preserved
              on changes to types. (Use versioned type names to manage
              breaking changes.)

            Note: this functionality is not currently available in the official
            protobuf release, and it is not used for type URLs beginning with
            type.googleapis.com.

            Schemes other than `http`, `https` (or the empty scheme) might be
            used with implementation specific semantics.
          type: string
        value:
          description: Must be a valid serialized protocol buffer of the above specified
            type.
          format: byte
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
      type: object
    rpcStatus:
      properties:
        code:
          format: int32
          type: integer
        message:
          type: string
        details:
          items:
            $ref: '#/components/schemas/protobufAny'
          type: array
      type: object
  securitySchemes:
    standardAuthorization:
      flows:
        implicit:
          scopes: {}
      type: oauth2
x-original-swagger-version: "2.0"
