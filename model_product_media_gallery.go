/*
product/product.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package product

import (
	"encoding/json"
)

// ProductMediaGallery struct for ProductMediaGallery
type ProductMediaGallery struct {
	Entries []ProductMediaGalleryEntry `json:"entries,omitempty"`
}

// NewProductMediaGallery instantiates a new ProductMediaGallery object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProductMediaGallery() *ProductMediaGallery {
	this := ProductMediaGallery{}
	return &this
}

// NewProductMediaGalleryWithDefaults instantiates a new ProductMediaGallery object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProductMediaGalleryWithDefaults() *ProductMediaGallery {
	this := ProductMediaGallery{}
	return &this
}

// GetEntries returns the Entries field value if set, zero value otherwise.
func (o *ProductMediaGallery) GetEntries() []ProductMediaGalleryEntry {
	if o == nil || isNil(o.Entries) {
		var ret []ProductMediaGalleryEntry
		return ret
	}
	return o.Entries
}

// GetEntriesOk returns a tuple with the Entries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductMediaGallery) GetEntriesOk() ([]ProductMediaGalleryEntry, bool) {
	if o == nil || isNil(o.Entries) {
    return nil, false
	}
	return o.Entries, true
}

// HasEntries returns a boolean if a field has been set.
func (o *ProductMediaGallery) HasEntries() bool {
	if o != nil && !isNil(o.Entries) {
		return true
	}

	return false
}

// SetEntries gets a reference to the given []ProductMediaGalleryEntry and assigns it to the Entries field.
func (o *ProductMediaGallery) SetEntries(v []ProductMediaGalleryEntry) {
	o.Entries = v
}

func (o ProductMediaGallery) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Entries) {
		toSerialize["entries"] = o.Entries
	}
	return json.Marshal(toSerialize)
}

type NullableProductMediaGallery struct {
	value *ProductMediaGallery
	isSet bool
}

func (v NullableProductMediaGallery) Get() *ProductMediaGallery {
	return v.value
}

func (v *NullableProductMediaGallery) Set(val *ProductMediaGallery) {
	v.value = val
	v.isSet = true
}

func (v NullableProductMediaGallery) IsSet() bool {
	return v.isSet
}

func (v *NullableProductMediaGallery) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProductMediaGallery(val *ProductMediaGallery) *NullableProductMediaGallery {
	return &NullableProductMediaGallery{value: val, isSet: true}
}

func (v NullableProductMediaGallery) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProductMediaGallery) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


