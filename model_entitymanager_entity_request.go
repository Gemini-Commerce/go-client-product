/*
Product Service

API for managing products

API version: v1
Contact: info@gemini-commerce.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package product

import (
	"encoding/json"
)

// checks if the EntitymanagerEntityRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EntitymanagerEntityRequest{}

// EntitymanagerEntityRequest struct for EntitymanagerEntityRequest
type EntitymanagerEntityRequest struct {
	TenantId *string `json:"tenantId,omitempty"`
	EntityData *EntitymanagerEntityIdentifier `json:"entityData,omitempty"`
	EntityId *string `json:"entityId,omitempty"`
}

// NewEntitymanagerEntityRequest instantiates a new EntitymanagerEntityRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEntitymanagerEntityRequest() *EntitymanagerEntityRequest {
	this := EntitymanagerEntityRequest{}
	return &this
}

// NewEntitymanagerEntityRequestWithDefaults instantiates a new EntitymanagerEntityRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEntitymanagerEntityRequestWithDefaults() *EntitymanagerEntityRequest {
	this := EntitymanagerEntityRequest{}
	return &this
}

// GetTenantId returns the TenantId field value if set, zero value otherwise.
func (o *EntitymanagerEntityRequest) GetTenantId() string {
	if o == nil || IsNil(o.TenantId) {
		var ret string
		return ret
	}
	return *o.TenantId
}

// GetTenantIdOk returns a tuple with the TenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntitymanagerEntityRequest) GetTenantIdOk() (*string, bool) {
	if o == nil || IsNil(o.TenantId) {
		return nil, false
	}
	return o.TenantId, true
}

// HasTenantId returns a boolean if a field has been set.
func (o *EntitymanagerEntityRequest) HasTenantId() bool {
	if o != nil && !IsNil(o.TenantId) {
		return true
	}

	return false
}

// SetTenantId gets a reference to the given string and assigns it to the TenantId field.
func (o *EntitymanagerEntityRequest) SetTenantId(v string) {
	o.TenantId = &v
}

// GetEntityData returns the EntityData field value if set, zero value otherwise.
func (o *EntitymanagerEntityRequest) GetEntityData() EntitymanagerEntityIdentifier {
	if o == nil || IsNil(o.EntityData) {
		var ret EntitymanagerEntityIdentifier
		return ret
	}
	return *o.EntityData
}

// GetEntityDataOk returns a tuple with the EntityData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntitymanagerEntityRequest) GetEntityDataOk() (*EntitymanagerEntityIdentifier, bool) {
	if o == nil || IsNil(o.EntityData) {
		return nil, false
	}
	return o.EntityData, true
}

// HasEntityData returns a boolean if a field has been set.
func (o *EntitymanagerEntityRequest) HasEntityData() bool {
	if o != nil && !IsNil(o.EntityData) {
		return true
	}

	return false
}

// SetEntityData gets a reference to the given EntitymanagerEntityIdentifier and assigns it to the EntityData field.
func (o *EntitymanagerEntityRequest) SetEntityData(v EntitymanagerEntityIdentifier) {
	o.EntityData = &v
}

// GetEntityId returns the EntityId field value if set, zero value otherwise.
func (o *EntitymanagerEntityRequest) GetEntityId() string {
	if o == nil || IsNil(o.EntityId) {
		var ret string
		return ret
	}
	return *o.EntityId
}

// GetEntityIdOk returns a tuple with the EntityId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntitymanagerEntityRequest) GetEntityIdOk() (*string, bool) {
	if o == nil || IsNil(o.EntityId) {
		return nil, false
	}
	return o.EntityId, true
}

// HasEntityId returns a boolean if a field has been set.
func (o *EntitymanagerEntityRequest) HasEntityId() bool {
	if o != nil && !IsNil(o.EntityId) {
		return true
	}

	return false
}

// SetEntityId gets a reference to the given string and assigns it to the EntityId field.
func (o *EntitymanagerEntityRequest) SetEntityId(v string) {
	o.EntityId = &v
}

func (o EntitymanagerEntityRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EntitymanagerEntityRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TenantId) {
		toSerialize["tenantId"] = o.TenantId
	}
	if !IsNil(o.EntityData) {
		toSerialize["entityData"] = o.EntityData
	}
	if !IsNil(o.EntityId) {
		toSerialize["entityId"] = o.EntityId
	}
	return toSerialize, nil
}

type NullableEntitymanagerEntityRequest struct {
	value *EntitymanagerEntityRequest
	isSet bool
}

func (v NullableEntitymanagerEntityRequest) Get() *EntitymanagerEntityRequest {
	return v.value
}

func (v *NullableEntitymanagerEntityRequest) Set(val *EntitymanagerEntityRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableEntitymanagerEntityRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableEntitymanagerEntityRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEntitymanagerEntityRequest(val *EntitymanagerEntityRequest) *NullableEntitymanagerEntityRequest {
	return &NullableEntitymanagerEntityRequest{value: val, isSet: true}
}

func (v NullableEntitymanagerEntityRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEntitymanagerEntityRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


