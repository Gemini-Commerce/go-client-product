/*
product/product.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package product

import (
	"encoding/json"
)

// EntitymanagerUpdateOptionsListResponse struct for EntitymanagerUpdateOptionsListResponse
type EntitymanagerUpdateOptionsListResponse struct {
	OptionList *EntitymanagerOptionsList `json:"optionList,omitempty"`
}

// NewEntitymanagerUpdateOptionsListResponse instantiates a new EntitymanagerUpdateOptionsListResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEntitymanagerUpdateOptionsListResponse() *EntitymanagerUpdateOptionsListResponse {
	this := EntitymanagerUpdateOptionsListResponse{}
	return &this
}

// NewEntitymanagerUpdateOptionsListResponseWithDefaults instantiates a new EntitymanagerUpdateOptionsListResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEntitymanagerUpdateOptionsListResponseWithDefaults() *EntitymanagerUpdateOptionsListResponse {
	this := EntitymanagerUpdateOptionsListResponse{}
	return &this
}

// GetOptionList returns the OptionList field value if set, zero value otherwise.
func (o *EntitymanagerUpdateOptionsListResponse) GetOptionList() EntitymanagerOptionsList {
	if o == nil || isNil(o.OptionList) {
		var ret EntitymanagerOptionsList
		return ret
	}
	return *o.OptionList
}

// GetOptionListOk returns a tuple with the OptionList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntitymanagerUpdateOptionsListResponse) GetOptionListOk() (*EntitymanagerOptionsList, bool) {
	if o == nil || isNil(o.OptionList) {
    return nil, false
	}
	return o.OptionList, true
}

// HasOptionList returns a boolean if a field has been set.
func (o *EntitymanagerUpdateOptionsListResponse) HasOptionList() bool {
	if o != nil && !isNil(o.OptionList) {
		return true
	}

	return false
}

// SetOptionList gets a reference to the given EntitymanagerOptionsList and assigns it to the OptionList field.
func (o *EntitymanagerUpdateOptionsListResponse) SetOptionList(v EntitymanagerOptionsList) {
	o.OptionList = &v
}

func (o EntitymanagerUpdateOptionsListResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.OptionList) {
		toSerialize["optionList"] = o.OptionList
	}
	return json.Marshal(toSerialize)
}

type NullableEntitymanagerUpdateOptionsListResponse struct {
	value *EntitymanagerUpdateOptionsListResponse
	isSet bool
}

func (v NullableEntitymanagerUpdateOptionsListResponse) Get() *EntitymanagerUpdateOptionsListResponse {
	return v.value
}

func (v *NullableEntitymanagerUpdateOptionsListResponse) Set(val *EntitymanagerUpdateOptionsListResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableEntitymanagerUpdateOptionsListResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableEntitymanagerUpdateOptionsListResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEntitymanagerUpdateOptionsListResponse(val *EntitymanagerUpdateOptionsListResponse) *NullableEntitymanagerUpdateOptionsListResponse {
	return &NullableEntitymanagerUpdateOptionsListResponse{value: val, isSet: true}
}

func (v NullableEntitymanagerUpdateOptionsListResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEntitymanagerUpdateOptionsListResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


