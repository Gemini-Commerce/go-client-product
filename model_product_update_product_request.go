/*
product/product.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package product

import (
	"encoding/json"
)

// ProductUpdateProductRequest struct for ProductUpdateProductRequest
type ProductUpdateProductRequest struct {
	TenantId       *string                           `json:"tenantId,omitempty"`
	Id             *string                           `json:"id,omitempty"`
	Code           *string                           `json:"code,omitempty"`
	AttributesMask *ProductFieldMask                 `json:"attributesMask,omitempty"`
	UrlKey         *ProductLocalizedText             `json:"urlKey,omitempty"`
	Attributes     *map[string]ProtobufAny           `json:"attributes,omitempty"`
	Variants       *map[string]ProductProductVariant `json:"variants,omitempty"`
}

// NewProductUpdateProductRequest instantiates a new ProductUpdateProductRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProductUpdateProductRequest() *ProductUpdateProductRequest {
	this := ProductUpdateProductRequest{}
	return &this
}

// NewProductUpdateProductRequestWithDefaults instantiates a new ProductUpdateProductRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProductUpdateProductRequestWithDefaults() *ProductUpdateProductRequest {
	this := ProductUpdateProductRequest{}
	return &this
}

// GetTenantId returns the TenantId field value if set, zero value otherwise.
func (o *ProductUpdateProductRequest) GetTenantId() string {
	if o == nil || isNil(o.TenantId) {
		var ret string
		return ret
	}
	return *o.TenantId
}

// GetTenantIdOk returns a tuple with the TenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductUpdateProductRequest) GetTenantIdOk() (*string, bool) {
	if o == nil || isNil(o.TenantId) {
		return nil, false
	}
	return o.TenantId, true
}

// HasTenantId returns a boolean if a field has been set.
func (o *ProductUpdateProductRequest) HasTenantId() bool {
	if o != nil && !isNil(o.TenantId) {
		return true
	}

	return false
}

// SetTenantId gets a reference to the given string and assigns it to the TenantId field.
func (o *ProductUpdateProductRequest) SetTenantId(v string) {
	o.TenantId = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ProductUpdateProductRequest) GetId() string {
	if o == nil || isNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductUpdateProductRequest) GetIdOk() (*string, bool) {
	if o == nil || isNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ProductUpdateProductRequest) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ProductUpdateProductRequest) SetId(v string) {
	o.Id = &v
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *ProductUpdateProductRequest) GetCode() string {
	if o == nil || isNil(o.Code) {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductUpdateProductRequest) GetCodeOk() (*string, bool) {
	if o == nil || isNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *ProductUpdateProductRequest) HasCode() bool {
	if o != nil && !isNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *ProductUpdateProductRequest) SetCode(v string) {
	o.Code = &v
}

// GetAttributesMask returns the AttributesMask field value if set, zero value otherwise.
func (o *ProductUpdateProductRequest) GetAttributesMask() ProductFieldMask {
	if o == nil || isNil(o.AttributesMask) {
		var ret ProductFieldMask
		return ret
	}
	return *o.AttributesMask
}

// GetAttributesMaskOk returns a tuple with the AttributesMask field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductUpdateProductRequest) GetAttributesMaskOk() (*ProductFieldMask, bool) {
	if o == nil || isNil(o.AttributesMask) {
		return nil, false
	}
	return o.AttributesMask, true
}

// HasAttributesMask returns a boolean if a field has been set.
func (o *ProductUpdateProductRequest) HasAttributesMask() bool {
	if o != nil && !isNil(o.AttributesMask) {
		return true
	}

	return false
}

// SetAttributesMask gets a reference to the given ProductFieldMask and assigns it to the AttributesMask field.
func (o *ProductUpdateProductRequest) SetAttributesMask(v ProductFieldMask) {
	o.AttributesMask = &v
}

// GetUrlKey returns the UrlKey field value if set, zero value otherwise.
func (o *ProductUpdateProductRequest) GetUrlKey() ProductLocalizedText {
	if o == nil || isNil(o.UrlKey) {
		var ret ProductLocalizedText
		return ret
	}
	return *o.UrlKey
}

// GetUrlKeyOk returns a tuple with the UrlKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductUpdateProductRequest) GetUrlKeyOk() (*ProductLocalizedText, bool) {
	if o == nil || isNil(o.UrlKey) {
		return nil, false
	}
	return o.UrlKey, true
}

// HasUrlKey returns a boolean if a field has been set.
func (o *ProductUpdateProductRequest) HasUrlKey() bool {
	if o != nil && !isNil(o.UrlKey) {
		return true
	}

	return false
}

// SetUrlKey gets a reference to the given ProductLocalizedText and assigns it to the UrlKey field.
func (o *ProductUpdateProductRequest) SetUrlKey(v ProductLocalizedText) {
	o.UrlKey = &v
}

// GetAttributes returns the Attributes field value if set, zero value otherwise.
func (o *ProductUpdateProductRequest) GetAttributes() map[string]ProtobufAny {
	if o == nil || isNil(o.Attributes) {
		var ret map[string]ProtobufAny
		return ret
	}
	return *o.Attributes
}

// GetAttributesOk returns a tuple with the Attributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductUpdateProductRequest) GetAttributesOk() (*map[string]ProtobufAny, bool) {
	if o == nil || isNil(o.Attributes) {
		return nil, false
	}
	return o.Attributes, true
}

// HasAttributes returns a boolean if a field has been set.
func (o *ProductUpdateProductRequest) HasAttributes() bool {
	if o != nil && !isNil(o.Attributes) {
		return true
	}

	return false
}

// SetAttributes gets a reference to the given map[string]ProtobufAny and assigns it to the Attributes field.
func (o *ProductUpdateProductRequest) SetAttributes(v map[string]ProtobufAny) {
	o.Attributes = &v
}

// GetVariants returns the Variants field value if set, zero value otherwise.
func (o *ProductUpdateProductRequest) GetVariants() map[string]ProductProductVariant {
	if o == nil || isNil(o.Variants) {
		var ret map[string]ProductProductVariant
		return ret
	}
	return *o.Variants
}

// GetVariantsOk returns a tuple with the Variants field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductUpdateProductRequest) GetVariantsOk() (*map[string]ProductProductVariant, bool) {
	if o == nil || isNil(o.Variants) {
		return nil, false
	}
	return o.Variants, true
}

// HasVariants returns a boolean if a field has been set.
func (o *ProductUpdateProductRequest) HasVariants() bool {
	if o != nil && !isNil(o.Variants) {
		return true
	}

	return false
}

// SetVariants gets a reference to the given map[string]ProductProductVariant and assigns it to the Variants field.
func (o *ProductUpdateProductRequest) SetVariants(v map[string]ProductProductVariant) {
	o.Variants = &v
}

func (o ProductUpdateProductRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.TenantId) {
		toSerialize["tenantId"] = o.TenantId
	}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !isNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !isNil(o.AttributesMask) {
		toSerialize["attributesMask"] = o.AttributesMask
	}
	if !isNil(o.UrlKey) {
		toSerialize["urlKey"] = o.UrlKey
	}
	if !isNil(o.Attributes) {
		toSerialize["attributes"] = o.Attributes
	}
	if !isNil(o.Variants) {
		toSerialize["variants"] = o.Variants
	}
	return json.Marshal(toSerialize)
}

type NullableProductUpdateProductRequest struct {
	value *ProductUpdateProductRequest
	isSet bool
}

func (v NullableProductUpdateProductRequest) Get() *ProductUpdateProductRequest {
	return v.value
}

func (v *NullableProductUpdateProductRequest) Set(val *ProductUpdateProductRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableProductUpdateProductRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableProductUpdateProductRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProductUpdateProductRequest(val *ProductUpdateProductRequest) *NullableProductUpdateProductRequest {
	return &NullableProductUpdateProductRequest{value: val, isSet: true}
}

func (v NullableProductUpdateProductRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProductUpdateProductRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
